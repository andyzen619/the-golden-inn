{"version":3,"sources":["firebase.js","context/menuContext.js","components/Menu/MenuItems/AppetizersComponent.js","components/Menu/MenuItems/RiceComponent.js","components/Menu/MenuItems/Sweet&SourComponent.js","components/Menu/MenuItems/EggFooYoungComponent.js","components/Menu/MenuItems/VegetableAndAlmonds.js","components/Menu/MenuItems/ChowMeinComponent.js","components/Menu/MenuItems/CantoneseComponent.js","components/Menu/MenuItems/SoupsComponent.js","components/Menu/MenuItems/CombinationsComponent.js","components/Menu/FullCourseComponent.js","components/Menu/MenuItems/CanadianDishesComponent.js","components/Menu/MenuListComponent.js","components/Navbar/MobileMenuComponent.js","components/Navbar/MenuSearchComponent.js","components/Navbar/MobileNavbarComponent.js","components/Navbar/DesktopNavbarComponent.js","components/Navbar/NavbarComponent.js","components/MapComponent.js","components/Menu/DesktopSidebarComponent.js","components/Menu/DesktopMenuRoutesComponent.js","components/Menu/DesktopMenuComponent.js","components/Landing.js","components/VisitUs.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["app","initializeApp","apiKey","projectId","db","getFirestore","MenuContext","React","createContext","MenuItemContextProvider","props","menu","setMenu","useState","useEffect","ref","collection","getDocs","then","querySnapshot","docs","forEach","doc","data","createElement","Provider","value","children","AppetizersComponent","useContext","getAppetizers","dishes","appetizers","Object","values","Media","queries","mobile","matches","Fragment","Segment","Group","map","dish","key","name","Card","Content","Header","as","floated","color","style","fontWeight","price","description","Item","background","padding","boxShadow","divided","image","Image","src","size","Meta","RiceComponent","getRice","Rice","SweetAndSourComponent","getSweetAndSour","SweetAndSour","Popup","trigger","rounded","width","hideOnScroll","flowing","display","justifyContent","margin","borderRadius","label","content","icon","ribbon","EggFooYoungComponent","getEggFooYoung","EggFooYoung","eggFooYoung","VegtablesAndAlmondsComponent","getVegtablesAndAlmonds","VegtablesAndAlmonds","vA","ChowMeinComponentComponent","getChowMeinComponent","ChowMeinComponent","chowMein","CantoneseComponentComponent","getCantoneseComponent","CantoneseComponent","cantonese","textAlign","SoupsComponent","getSoupsComponent","soups","CombinationsComponent","getCombinations","combinations","Combinations","DinnersComponent","getDinners","dinners","Dinners","CanadianComponent","getCanadianComponent","canadian","MenuListComponenet","activeIndex","setActiveIndex","handleClick","e","index","Accordion","fluid","styled","className","Title","active","onClick","Icon","left","position","MenuStyle","top","height","MenuComponent","Modal","Menu","closeIcon","maxHeight","overflow","sub","initialState","isLoading","results","SearchExampleStandard","Component","constructor","arguments","state","getAllDishes","allDishes","allCombinations","allDinners","result","newDishObj","title","push","handleResultSelect","_","_ref","this","setState","handleSearchChange","_ref2","setTimeout","length","re","RegExp","lodash","escapeRegExp","filter","context","test","render","Grid","Column","Search","assign","aligned","loading","onSearchChange","debounce","leading","contextType","SmallMobileComponent","Responsive","onlyMobile","fontSize","MenuSearchComponent","right","RegularMobileComponent","MobileNavBarComponent","small","ScrollLink","Scroll","Link","DesktopNavbarComponent","textStyle","to","concat","NavbarComponent","MobileNavbarComponent","MapComponent","Element","Iframe","url","id","SidebarComponent","setDefaultFalse","setActiveIndeex","Sidebar","animation","vertical","visible","titleProps","menuRouteStyle","menuItemStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","DesktopMenuRoutesComponent","Pusher","Switch","Route","exact","path","basic","FullcourseComponenet","SoupComponent","VegetablesAndAlmondsComponent","DesktopMenuComponentStyle","sidebarContainerStyle","backgroundImage","sidebarStyle","DesktopMenuComponent","setIsDefault","Router","Pushable","SideBarComponent","DesktopMenuRouteComponent","DesktopLandingV2","prop","backgroundColor","VisitUs","daysOfTheWeek","setDaysOfTheWeek","getDoc","hoursOfOperation","href","item","order","day","hours","AppStyle","App","banner","setBanner","message","NavBarComponent","Message","warning","HomepageComponent","ReactGA","initialize","pageview","DesktopLanding","DesktopVisitUs","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7c87d15a.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCEjL7ZIpn9SUG8raac9BtH18ZONAD_3hc\",\n  projectId: \"the-golden-inn-restaurant\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nexport const db = getFirestore(app);\n","import React, { useEffect, useState } from \"react\";\nimport { collection, getDocs } from \"firebase/firestore\";\n\nimport { db } from \"../firebase\";\n\nconst MenuContext = React.createContext([{}, () => {}]);\n\nconst MenuItemContextProvider = (props) => {\n  const [menu, setMenu] = useState({});\n\n  useEffect(() => {\n    const ref = collection(db, \"menu-items\");\n\n    getDocs(ref).then((querySnapshot) => {\n      querySnapshot.docs.forEach((doc) => {\n        setMenu(doc.data());\n      });\n    });\n  }, []);\n  return (\n    <MenuContext.Provider value={[menu, setMenu]}>\n      {props.children}\n    </MenuContext.Provider>\n  );\n};\n\nexport { MenuContext, MenuItemContextProvider };\n","import React, { useContext, Fragment } from \"react\";\nimport Media from \"react-media\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\n\nimport { MenuContext } from \"../../../context/menuContext\";\n\nconst AppetizersComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getAppetizers = () => {\n    if (menu.dishes) {\n      let appetizers = menu.dishes.appetizers;\n      return Object.values(appetizers);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getAppetizers().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\",\n              }}\n              divided\n            >\n              {getAppetizers().map((dish) => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default AppetizersComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menuContext\";\n\nconst RiceComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getRice = () => {\n    if (menu.dishes) {\n      let Rice = menu.dishes.Rice;\n      return Object.values(Rice);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getRice().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\",\n              }}\n              divided\n            >\n              {getRice().map((dish) => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default RiceComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Item, Image, Popup } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menuContext\";\n\nconst SweetAndSourComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getSweetAndSour = () => {\n    if (menu.dishes) {\n      let SweetAndSour = menu.dishes[\"sweet&Sour\"];\n      return Object.values(SweetAndSour);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getSweetAndSour().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    {dish.image && (\n                      <Popup\n                        trigger={\n                          <Image\n                            src={dish.image}\n                            floated=\"right\"\n                            rounded\n                            style={{ width: \"60px\" }}\n                          />\n                        }\n                        hideOnScroll\n                        flowing\n                      >\n                        <Image src={dish.image} size=\"medium\" rounded />\n                      </Popup>\n                    )}\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              {\" \"}\n              <Item.Group\n                style={{\n                  background: \"white\",\n                  padding: \"5%\",\n                  boxShadow: \"5px 5px 5px 5px black\",\n                  width: \"60%\",\n                }}\n                divided\n              >\n                {getSweetAndSour().map((dish) => {\n                  return (\n                    <Item key={dish.name}>\n                      <Card.Content>\n                        <Header\n                          as=\"h3\"\n                          floated=\"right\"\n                          color=\"green\"\n                          style={{ fontWeight: \"400\" }}\n                        >\n                          {dish.price}\n                        </Header>\n                        <Item.Header>\n                          <Header as=\"h4\">{dish.name}</Header>\n                        </Item.Header>\n                        {dish.description && (\n                          <Item.Meta>{dish.description}</Item.Meta>\n                        )}\n                      </Card.Content>\n                    </Item>\n                  );\n                })}\n              </Item.Group>\n              <div style={{ width: \"30%\" }}>\n                {getSweetAndSour().map((dish) => {\n                  return (\n                    dish.image && (\n                      <Image\n                        src={dish.image}\n                        size=\"large\"\n                        rounded\n                        style={{\n                          margin: \"50px\",\n                          borderRadius: \"25px\",\n                        }}\n                        label={{\n                          color: \"brown\",\n                          content: dish.name,\n                          icon: \"food\",\n                          ribbon: \"right\",\n                          size: \"large\",\n                        }}\n                      />\n                    )\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default SweetAndSourComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menuContext\";\n\nconst EggFooYoungComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getEggFooYoung = () => {\n    if (menu.dishes) {\n      let EggFooYoung = menu.dishes.eggFooYoung;\n      return Object.values(EggFooYoung);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getEggFooYoung().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\",\n              }}\n              divided\n            >\n              {getEggFooYoung().map((dish) => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default EggFooYoungComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Image, Item } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menuContext\";\n\nconst VegtablesAndAlmondsComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getVegtablesAndAlmonds = () => {\n    if (menu.dishes) {\n      let VegtablesAndAlmonds = menu.dishes.vA;\n      return Object.values(VegtablesAndAlmonds);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getVegtablesAndAlmonds().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\",\n              }}\n              divided\n            >\n              {getVegtablesAndAlmonds().map((dish) => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default VegtablesAndAlmondsComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Image, Item, Popup } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menuContext\";\n\nconst ChowMeinComponentComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getChowMeinComponent = () => {\n    if (menu.dishes) {\n      let ChowMeinComponent = menu.dishes.chowMein;\n      return Object.values(ChowMeinComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getChowMeinComponent().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    {dish.image && (\n                      <Popup\n                        trigger={\n                          <Image\n                            src={dish.image}\n                            floated=\"right\"\n                            rounded\n                            style={{ width: \"60px\" }}\n                          />\n                        }\n                        hideOnScroll\n                        flowing\n                      >\n                        <Image src={dish.image} size=\"medium\" rounded />\n                      </Popup>\n                    )}\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <Item.Group\n                style={{\n                  background: \"white\",\n                  padding: \"5%\",\n                  boxShadow: \"5px 5px 5px 5px black\",\n                  width: \"60%\",\n                }}\n                divided\n              >\n                {getChowMeinComponent().map((dish) => {\n                  return (\n                    <Item key={dish.name}>\n                      <Card.Content>\n                        <Header\n                          as=\"h3\"\n                          floated=\"right\"\n                          color=\"green\"\n                          style={{ fontWeight: \"400\" }}\n                        >\n                          {dish.price}\n                        </Header>\n                        <Item.Header>\n                          <Header as=\"h4\">{dish.name}</Header>\n                        </Item.Header>\n                        {dish.description && (\n                          <Item.Meta>{dish.description}</Item.Meta>\n                        )}\n                      </Card.Content>\n                    </Item>\n                  );\n                })}\n              </Item.Group>\n              <div style={{ width: \"30%\" }}>\n                {getChowMeinComponent().map((dish) => {\n                  return (\n                    dish.image && (\n                      <Image\n                        src={dish.image}\n                        size=\"large\"\n                        rounded\n                        style={{\n                          margin: \"50px\",\n                          borderRadius: \"25px\",\n                        }}\n                        label={{\n                          color: \"brown\",\n                          content: dish.name,\n                          icon: \"food\",\n                          ribbon: \"right\",\n                          size: \"large\",\n                        }}\n                      />\n                    )\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default ChowMeinComponentComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Card, Header, Image, Popup, Item, Segment } from \"semantic-ui-react\";\nimport { MenuContext } from \"../../../context/menuContext\";\nimport Media from \"react-media\";\nconst CantoneseComponentComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getCantoneseComponent = () => {\n    if (menu.dishes) {\n      let CantoneseComponent = menu.dishes.cantonese;\n      return Object.values(CantoneseComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getCantoneseComponent().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    {dish.image && (\n                      <Popup\n                        trigger={\n                          <Image\n                            src={dish.image}\n                            floated=\"right\"\n                            rounded\n                            style={{ width: \"60px\" }}\n                          />\n                        }\n                        hideOnScroll\n                        flowing\n                      >\n                        <Image src={dish.image} size=\"medium\" rounded />\n                      </Popup>\n                    )}\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        textAlign=\"center\"\n                        color=\"green\"\n                        style={{\n                          fontWeight: \"400\",\n                        }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header\n                          as=\"h5\"\n                          color=\"grey\"\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <Item.Group\n                style={{\n                  background: \"white\",\n                  padding: \"5%\",\n                  boxShadow: \"5px 5px 5px 5px black\",\n                  width: \"60%\",\n                }}\n                divided\n              >\n                {getCantoneseComponent().map((dish) => {\n                  return (\n                    <Item key={dish.name}>\n                      <Card.Content>\n                        <Header\n                          as=\"h3\"\n                          floated=\"right\"\n                          color=\"green\"\n                          style={{ fontWeight: \"400\" }}\n                        >\n                          {dish.price}\n                        </Header>\n                        <Item.Header>\n                          <Header as=\"h4\">{dish.name}</Header>\n                        </Item.Header>\n                        {dish.description && (\n                          <Item.Meta>{dish.description}</Item.Meta>\n                        )}\n                      </Card.Content>\n                    </Item>\n                  );\n                })}\n              </Item.Group>\n              <div style={{ width: \"30%\" }}>\n                {getCantoneseComponent().map((dish) => {\n                  return (\n                    dish.image && (\n                      <Image\n                        src={dish.image}\n                        size=\"large\"\n                        rounded\n                        style={{\n                          margin: \"50px\",\n                          borderRadius: \"25px\",\n                        }}\n                        label={{\n                          color: \"brown\",\n                          content: dish.name,\n                          icon: \"food\",\n                          ribbon: \"right\",\n                          size: \"large\",\n                        }}\n                      />\n                    )\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default CantoneseComponentComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Image, Item } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menuContext\";\n\nconst SoupsComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getSoupsComponent = () => {\n    if (menu.dishes) {\n      let SoupsComponent = menu.dishes.soups;\n      return Object.values(SoupsComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getSoupsComponent().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\",\n              }}\n              divided\n            >\n              {getSoupsComponent().map((dish) => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default SoupsComponent;\n","import React, { Fragment, useContext } from \"react\";\nimport { Card, Header, Image, Popup, Item, Segment } from \"semantic-ui-react\";\nimport { MenuContext } from \"../../../context/menuContext\";\nimport Media from \"react-media\";\n\nconst CombinationsComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getCombinations = () => {\n    if (menu.combinations) {\n      let Combinations = menu.combinations;\n      return Object.values(Combinations);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getCombinations().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    {dish.image && (\n                      <Popup\n                        trigger={\n                          <Image\n                            src={dish.image}\n                            floated=\"right\"\n                            rounded\n                            style={{ width: \"60px\" }}\n                          />\n                        }\n                        hideOnScroll\n                        flowing\n                      >\n                        <Image src={dish.image} size=\"medium\" rounded />\n                      </Popup>\n                    )}\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header\n                          as=\"h5\"\n                          color=\"grey\"\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <Item.Group\n                style={{\n                  background: \"white\",\n                  padding: \"5%\",\n                  boxShadow: \"5px 5px 5px 5px black\",\n                  width: \"80%\",\n                }}\n                divided\n              >\n                {getCombinations().map((dish) => {\n                  return (\n                    <Item key={dish.name}>\n                      <Card.Content>\n                        <Header\n                          as=\"h3\"\n                          floated=\"right\"\n                          color=\"green\"\n                          style={{ fontWeight: \"400\" }}\n                        >\n                          {dish.price}\n                        </Header>\n                        <Item.Header>\n                          <Header as=\"h4\">{dish.name}</Header>\n                        </Item.Header>\n                        {dish.description && (\n                          <Item.Meta>{dish.description}</Item.Meta>\n                        )}\n                      </Card.Content>\n                    </Item>\n                  );\n                })}\n              </Item.Group>\n              <div style={{ width: \"30%\" }}>\n                {getCombinations().map((dish) => {\n                  return (\n                    dish.image && (\n                      <Image\n                        src={dish.image}\n                        size=\"large\"\n                        rounded\n                        style={{\n                          margin: \"50px\",\n                          borderRadius: \"25px\",\n                        }}\n                        label={{\n                          color: \"brown\",\n                          content: dish.name,\n                          icon: \"food\",\n                          ribbon: \"right\",\n                          size: \"large\",\n                        }}\n                      />\n                    )\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default CombinationsComponent;\n","import React, { Fragment, useContext } from \"react\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../context/menuContext\";\n\nconst DinnersComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getDinners = () => {\n    if (menu.dinners) {\n      let Dinners = menu.dinners;\n      return Object.values(Dinners);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getDinners().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\",\n              }}\n              divided\n            >\n              {getDinners().map((dish) => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default DinnersComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menuContext\";\n\nconst CanadianComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  const getCanadianComponent = () => {\n    if (menu.dishes) {\n      let CanadianComponent = menu.dishes.canadian;\n      return Object.values(CanadianComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {(matches) => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getCanadianComponent().map((dish) => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\",\n              }}\n              divided\n            >\n              {getCanadianComponent().map((dish) => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default CanadianComponent;\n","import React, { useState } from \"react\";\nimport { Accordion, Icon, Header } from \"semantic-ui-react\";\n\nimport AppetizersComponent from \"./MenuItems/AppetizersComponent\";\nimport RiceComponent from \"./MenuItems/RiceComponent\";\nimport SweetAndSourComponent from \"./MenuItems/Sweet&SourComponent\";\nimport EggFooYoungComponent from \"./MenuItems/EggFooYoungComponent\";\nimport VegtablesAndAlmondsComponent from \"./MenuItems/VegetableAndAlmonds\";\nimport ChowMeinComponentComponent from \"./MenuItems/ChowMeinComponent\";\nimport CantoneseComponentComponent from \"./MenuItems/CantoneseComponent\";\nimport SoupsComponent from \"./MenuItems/SoupsComponent\";\nimport CombinationsComponent from \"./MenuItems/CombinationsComponent\";\nimport DinnersComponent from \"./FullCourseComponent\";\nimport CanadianComponent from \"./MenuItems/CanadianDishesComponent\";\n\nconst MenuListComponenet = () => {\n  const [activeIndex, setActiveIndex] = useState(-1);\n\n  const handleClick = (e, index) => {\n    if (index.index === activeIndex) {\n      setActiveIndex(-1);\n    } else {\n      setActiveIndex(index.index);\n    }\n  };\n\n  return (\n    <Accordion fluid styled className={\"accordian\"}>\n      <Accordion.Title\n        active={activeIndex === 0}\n        index={0}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Special Combination Plates\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 0}>\n        <CombinationsComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Full Course Dinner\n        {/* <Header sub as='h6' style={{width: '300px'}}>Any substitutions incur a minimum $2.00 charge **</Header> */}\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1}>\n        <h6 style={{ margin: 0, left: \"15px\", position: \"relative\" }}>\n          Minimum $2.00 charge for substitutions\n        </h6>\n        <DinnersComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 2}\n        index={2}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Appetizers\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 2}>\n        <AppetizersComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 3}\n        index={3}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Rice (One size only)\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 3}>\n        <RiceComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 4}\n        index={4}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Sweet And Sour\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 4}>\n        <SweetAndSourComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 5}\n        index={5}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Egg Foo Young (grilled)\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 5}>\n        <EggFooYoungComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 6}\n        as={Header}\n        index={6}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Vegetable and Almonds\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 6}>\n        <VegtablesAndAlmondsComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 7}\n        as={Header}\n        index={7}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Chow Mein/Chop Suey\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 7}>\n        <ChowMeinComponentComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 8}\n        as={Header}\n        index={8}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Cantonese Style\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 8}>\n        <CantoneseComponentComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 9}\n        as={Header}\n        index={9}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Soups\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 9}>\n        <SoupsComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 10}\n        as={Header}\n        index={10}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Canadian Dishes\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 10}>\n        <CanadianComponent />\n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nexport default MenuListComponenet;\n","import React from \"react\";\nimport { Header, Modal, Menu } from \"semantic-ui-react\";\nimport MenuListComponenet from \"../Menu/MenuListComponent\";\n\nconst MenuStyle = {\n  top: \"5%\",\n  width: \"90%\",\n  height: \"80%\",\n};\n\nconst MenuComponent = () => (\n  <Modal\n    trigger={\n      <Menu.Item position=\"left\">\n        <div className=\"text-white text-lg\">Menu</div>\n      </Menu.Item>\n    }\n    closeIcon\n    style={MenuStyle}\n  >\n    <Modal.Content\n      style={{ maxHeight: \"calc(100vh - 10em)\", overflow: \"auto\" }}\n    >\n      <Header as=\"h2\">Menu</Header>\n      <MenuListComponenet />\n      <Header sub as=\"h6\">\n        Prices are subject to change.**\n      </Header>\n    </Modal.Content>\n  </Modal>\n);\n\nexport default MenuComponent;\n","import lodash from \"lodash\";\nimport React, { Component, } from \"react\";\nimport { Search, Grid } from \"semantic-ui-react\";\nimport { MenuContext } from \"../../context/menuContext\";\n\nconst style = {\n  position: \"relative\"\n};\n\n\nconst initialState = { isLoading: false, results: [], value: \"\" };\n\nexport default class SearchExampleStandard extends Component {\n  state = initialState;\n  static contextType = MenuContext;\n\n  getAllDishes = menu => {\n    const allDishes = menu.dishes;\n    const allCombinations = menu.combinations;\n    const allDinners = menu.dinners;\n    const result = [];\n\n    Object.values(allDishes).forEach(value => {\n      Object.values(value).forEach(dish => {\n        const newDishObj = {\n          title: dish.name,\n          description: dish.description,\n          price: dish.price\n        };\n        result.push(newDishObj);\n      });\n    });\n    Object.values(allCombinations).forEach(dish => {\n      const newDishObj = {\n        title: dish.name,\n        description: dish.description,\n        price: dish.price\n      };\n      result.push(newDishObj);\n    });\n    Object.values(allDinners).forEach(dish => {\n      const newDishObj = {\n        title: dish.name,\n        description: dish.description,\n        price: dish.price\n      };\n      result.push(newDishObj);\n    });\n    return result;\n  };\n\n  handleResultSelect = (_, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (_, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) {\n        return this.setState(initialState);\n      }\n\n      const re = new RegExp(lodash.escapeRegExp(this.state.value), \"i\");\n      const isMatch = result => re.test(result.title);\n\n      this.setState({\n        isLoading: false,\n        results: lodash.filter(this.getAllDishes(this.context[0]), isMatch)\n      });\n    }, 300);\n  };\n  render() {\n    const { isLoading, value, results } = this.state;\n\n    return (\n      <Grid>\n        <Grid.Column width={4} style={style}>\n          <div>\n            <Search\n              aligned={\"left\"}\n              loading={isLoading}\n              // onResultSelect={this.handleResultSelect}\n              onSearchChange={lodash.debounce(this.handleSearchChange, 500, {\n                leading: true\n              })}\n              results={results}\n              value={value}\n              {...this.props}\n            ></Search>\n          </div>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { Responsive, Menu } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport MenuComponent from \"./MobileMenuComponent\";\nimport MenuSearchComponent from \"./MenuSearchComponent\";\n\nconst SmallMobileComponent = () => {\n  return (\n    <Responsive\n      as={Menu}\n      {...Responsive.onlyMobile}\n      style={{\n        background: \"#b82e26\",\n        padding: \"3%\",\n        fontSize: \".90rem\"\n      }}\n    >\n      <MenuComponent />\n      <MenuSearchComponent style={{ right: \"100%\", position: \"relative\" }} />\n    </Responsive>\n  );\n};\n\nconst RegularMobileComponent = () => {\n  return (\n    <Responsive\n      as={Menu}\n      {...Responsive.onlyMobile}\n      style={{\n        background: \"#b82e26\",\n        padding: \"3%\"\n      }}\n    >\n      <MenuComponent />\n      <MenuSearchComponent style={{ right: \"100%\", position: \"relative\" }} />\n    </Responsive>\n  );\n};\n\nconst MobileNavBarComponent = menu => {\n  return (\n    <Media\n      queries={{\n        small: \"(max-width: 320px)\"\n      }}\n    >\n      {matches => (\n        <Fragment>\n          {matches.small && <SmallMobileComponent />}\n          {!matches.small && <RegularMobileComponent />}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default MobileNavBarComponent;\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport MenuSearchComponent from \"./MenuSearchComponent\";\nimport Scroll from \"react-scroll\";\nimport { Link } from \"react-router-dom\";\n\nconst ScrollLink = Scroll.Link;\nconst DesktopNavbarComponent = () => {\n  const textStyle = \"text-sm sm:text-2xl hover:font-semibold text-white\";\n\n  return (\n    <div\n      style={{ background: \"#b82e26\" }}\n      className=\"flex text-white justify-around py-4\"\n    >\n      <Menu.Item className=\"flex flex-col justify-center\">\n        <Link to=\"/\">\n          <div className={`${textStyle}`}>HOME</div>\n        </Link>\n      </Menu.Item>\n\n      <Menu.Item name=\"Menu\" className=\"flex flex-col justify-center\">\n        <Link to=\"/menu\">\n          <div className={`${textStyle}`}>MENU</div>\n        </Link>\n      </Menu.Item>\n\n      <Menu.Item name=\"Menu\" className=\"flex flex-col justify-center\">\n        <ScrollLink to=\"visit_us\">\n          <Link to=\"/\">\n            <button className={`${textStyle}`}>VISIT US</button>\n          </Link>\n        </ScrollLink>\n      </Menu.Item>\n\n      <Menu.Item name=\"Menu\" className=\"flex flex-col justify-center\">\n        <Link to=\"/\">\n          <ScrollLink to=\"hours\">\n            <button className={`${textStyle}`}> HOURS</button>\n          </ScrollLink>\n        </Link>\n      </Menu.Item>\n\n      <Menu.Menu className=\"flex flex-col justify-center\">\n        <Menu.Item>\n          <MenuSearchComponent />\n        </Menu.Item>\n      </Menu.Menu>\n    </div>\n  );\n};\n\nexport default DesktopNavbarComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport MobileNavbarComponent from \"./MobileNavbarComponent\";\nimport DesktopNavbarComponent from \"./DesktopNavbarComponent\";\n\nimport { MenuContext } from \"../../context/menuContext\";\n\nconst NavbarComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  return (\n    <div>\n      <Segment.Group>\n        <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n          {(matches) => (\n            <Fragment>\n              {matches.mobile && (\n                <div>\n                  <MobileNavbarComponent menu={menu} />\n                </div>\n              )}\n              {!matches.mobile && (\n                <div>\n                  <DesktopNavbarComponent menu={menu} />\n                </div>\n              )}\n            </Fragment>\n          )}\n        </Media>\n      </Segment.Group>\n    </div>\n  );\n};\n\nexport default NavbarComponent;\n","import React from \"react\";\nimport Iframe from \"react-iframe\";\nimport { Element } from \"react-scroll\";\n\nconst MapComponent = () => {\n  return (\n    <Element name=\"visit_us\">\n      <div className=\"flex w-screen justify-center\">\n        <Iframe\n          url=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7025.307316203426!2d-77.14187548434793!3d44.00714172541031!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89d7ca541acadc9d%3A0xe6740b299f5e525e!2s155%20Picton%20Main%20St%2C%20Prince%20Edward%2C%20ON!5e0!3m2!1sen!2sca!4v1581291195493!5m2!1sen!2sca\"\n          width=\"100%\"\n          height=\"450px\"\n          id=\"myId\"\n        />\n      </div>\n    </Element>\n  );\n};\n\nexport default MapComponent;\n","import React, { useState } from \"react\";\nimport { Sidebar, Accordion, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst SidebarComponent = ({ setDefaultFalse }) => {\n  const [activeIndex, setActiveIndeex] = useState(0);\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n    setActiveIndeex(newIndex);\n  };\n\n  return (\n    <Sidebar\n      as={Accordion}\n      animation=\"push\"\n      icon=\"labeled\"\n      vertical\n      visible={true}\n      styled\n      style={{ background: '#f0f0f0' }}\n    >\n      <Link to=\"/menu/combinations\">\n        <Accordion.Title onClick={setDefaultFalse}>\n          <Icon />\n          Special Combination Plates\n        </Accordion.Title>\n      </Link>\n\n      <Link to=\"/menu/fullcourse\">\n        <Accordion.Title onClick={setDefaultFalse}>\n          <Icon />\n          Full Course Dinners\n        </Accordion.Title>\n      </Link>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Main Dishes\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1} styled={false}>\n        <Accordion style={{ boxShadow: \"none\", background: '#f0f0f0' }}>\n          <Link to=\"/menu/soups\">\n            <Accordion.Title onClick={setDefaultFalse}>Soups</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/appetizers\">\n            <Accordion.Title onClick={setDefaultFalse}>Appetizers</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/rice\">\n            <Accordion.Title onClick={setDefaultFalse}>Rice (One size)</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/eggFooYoung\">\n            <Accordion.Title onClick={setDefaultFalse}>Egg Foo Young (Grilled)</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/chowMein\">\n            <Accordion.Title onClick={setDefaultFalse}>Chow Mein (Dry noodles)/Chop Suey</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/sweetAndSour\">\n            <Accordion.Title onClick={setDefaultFalse}>Sweet and Sour</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/vegtablesAndAlmonds\">\n            <Accordion.Title onClick={setDefaultFalse}>Vegetables and Almonds</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/cantonese\">\n            <Accordion.Title onClick={setDefaultFalse}>Cantonese Style</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/canadian\">\n            <Accordion.Title onClick={setDefaultFalse}>Canadian Dishes</Accordion.Title>\n          </Link>\n        </Accordion>\n      </Accordion.Content>\n    </Sidebar>\n  );\n};\n\nexport default SidebarComponent;\n","import React from \"react\";\nimport { Sidebar, Segment, div, Item } from \"semantic-ui-react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CombinationsComponent from \"./MenuItems/CombinationsComponent\";\nimport FullcourseComponenet from \"./FullCourseComponent\";\nimport SoupComponent from \"./MenuItems/SoupsComponent\";\nimport AppetizersComponent from \"./MenuItems/AppetizersComponent\";\nimport RiceComponent from \"./MenuItems/RiceComponent\";\nimport EggFooYoungComponent from \"./MenuItems/EggFooYoungComponent\";\nimport ChowMeinComponent from \"./MenuItems/ChowMeinComponent\";\nimport SweetAndSourComponent from \"./MenuItems/Sweet&SourComponent\";\nimport VegetablesAndAlmondsComponent from \"./MenuItems/VegetableAndAlmonds\";\nimport CantoneseComponent from \"./MenuItems/CantoneseComponent\";\nimport CanadianComponent from \"./MenuItems/CanadianDishesComponent\";\nconst menuRouteStyle = {\n  menuItemStyle: {\n    paddingLeft: \"50px\",\n    paddingRight: \"300px\",\n    paddingTop: \"50px\",\n    paddingBottom: \"50px\",\n    height: \"450px\",\n  },\n};\n\nconst DesktopMenuRoutesComponent = () => {\n  const { menuItemStyle } = menuRouteStyle;\n\n  return (\n    <Sidebar.Pusher\n      style={{ padding: \" 2% 5%\", overflow: \"auto\" }}\n      className=\"text-white\"\n    >\n      <Switch>\n        <Route exact path=\"/menu\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Special Combinations Plates</div>\n            <Item.Meta>\n              No substitutions within combinations plates. Get $1 off betwean\n              11:30am-2pm\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CombinationsComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/combinations\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Special Combinations Plates</div>\n            <Item.Meta>\n              No substitutions within combinations plates. Get $1 off betwean\n              11:30am-2pm\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CombinationsComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/fullcourse\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Full Course Meals</div>\n            <Item.Meta>\n              Appetizers cannot be substituted. Other substitutions require\n              minimum $2.00 charge**.\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <FullcourseComponenet />\n          </div>\n        </Route>\n        <Route path=\"/menu/soups\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Soups</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <SoupComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/appetizers\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Appetizers</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <AppetizersComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/rice\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Rice (One size only)</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <RiceComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/eggFooYoung\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Egg Foo Young (Grilled)</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <EggFooYoungComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/chowMein\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">\n              Chow Mein (Dry noodles)/Chop Suey\n            </div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <ChowMeinComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/sweetAndSour\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Sweet and Sour</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <SweetAndSourComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/vegtablesAndAlmonds\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Vegetables and Almonds</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <VegetablesAndAlmondsComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/cantonese\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Cantonese Style</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CantoneseComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/canadian\">\n          <Segment basic>\n            <div className=\"text-4xl py-8\">Canadian Dishes</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CanadianComponent />\n          </div>\n        </Route>\n      </Switch>\n    </Sidebar.Pusher>\n  );\n};\n\nexport default DesktopMenuRoutesComponent;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Sidebar } from \"semantic-ui-react\";\nimport SideBarComponent from \"./DesktopSidebarComponent\";\n\nimport DesktopMenuRouteComponent from \"./DesktopMenuRoutesComponent\";\n\nconst DesktopMenuComponentStyle = {\n  sidebarContainerStyle: {\n    height: \"100vh\",\n    backgroundImage: `linear-gradient(\n      rgba(0, 0, 0, 0.5),\n      rgba(0, 0, 0, 0.5)\n    ),url(\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/90638527_2542059202721532_3598802648356093952_n.png?_nc_cat=106&_nc_sid=b96e70&_nc_ohc=c5iOBlIIPsUAX_z4-zw&_nc_ht=scontent-ort2-2.xx&oh=73412c67136a40e2e6151d3719d87da2&oe=5EA3FC74\")`\n  },\n  sidebarStyle: { padding: \" 1.4em\" },\n  menuItemStyle: {\n    paddingLeft: \"50px\",\n    paddingRight: \"300px\",\n    paddingTop: \"50px\",\n    paddingBottom: \"50px\",\n    height: \"450px\",\n    width: \"1700px\"\n  }\n};\n\nconst DesktopMenuComponent = () => {\n  const { sidebarContainerStyle } = DesktopMenuComponentStyle;\n\n  const [, setIsDefault] = useState(true);\n\n  const setDefaultFalse = () => {\n    setIsDefault(false);\n  };\n\n  return (\n    <Router>\n      <Sidebar.Pushable style={sidebarContainerStyle}>\n        <SideBarComponent setDefaultFalse={setDefaultFalse} />\n        <DesktopMenuRouteComponent />\n      </Sidebar.Pushable>\n    </Router>\n  );\n};\n\nexport default DesktopMenuComponent;\n","import React, { Fragment } from \"react\";\nimport { Modal, Header } from \"semantic-ui-react\";\nimport MenuListComponenet from \"./Menu/MenuListComponent\";\nimport Media from \"react-media\";\nimport { Link } from 'react-router-dom'\n\nconst DesktopLandingV2 = (prop) => {\n  const MenuStyle = {\n    top: \"5%\",\n    width: \"90%\",\n    height: \"80%\",\n  };\n\n  return (\n    <div\n      style={{ height: \"600px\" }}\n      className=\"flex flex-col justify-center text-white\"\n    >\n      <div className=\"flex justify-center p-8\">\n        <div\n          style={{ backgroundColor: \"#b82e26\" }}\n          className=\"px-8 py-24 rounded-full text-4xl opacity-75\"\n        >\n          <div className=\"flex justify-center text-white opacity-100\">GOLDEN INN</div>\n          <div className=\"flex justify-center pt-2 opacity-100\">RESTAURANT</div>\n        </div>\n      </div>\n      <div className=\"flex justify-center text-lg text-center p-4\">\n        SERVING AUTHENTIC CANTONESE STYLE CHINESE FOOD FOR 28 YEARS\n      </div>\n      <div className=\"flex justify-center text-black p-2\">\n        <div className=\"bg-white opacity-75 hover:opacity-100 p-4 px-12 ml-2\">\n          <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n            {(matches) => (\n              <Fragment>\n                {matches.mobile && (\n                  <div>\n                    <Modal\n                      trigger={<div className=\"text-black text-lg\">Menu</div>}\n                      closeIcon\n                      style={MenuStyle}\n                    >\n                      <Modal.Content\n                        style={{\n                          maxHeight: \"calc(100vh - 10em)\",\n                          overflow: \"auto\",\n                        }}\n                      >\n                        <Header as=\"h2\">Menu</Header>\n                        <MenuListComponenet />\n                        <Header sub as=\"h6\">\n                          Prices are subject to change.**\n                        </Header>\n                      </Modal.Content>\n                    </Modal>\n                  </div>\n                )}\n                {!matches.mobile && <Link to=\"/menu\" className='font-semibold hover:text-black'>Menu</Link>}\n              </Fragment>\n            )}\n          </Media>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DesktopLandingV2;\n","import React, { useEffect, useState } from \"react\";\nimport { Element } from \"react-scroll\";\nimport { doc, getDoc } from \"firebase/firestore\";\n\nimport { db } from \"../firebase\";\n\nconst VisitUs = () => {\n  const [daysOfTheWeek, setDaysOfTheWeek] = useState([]);\n\n  useEffect(() => {\n    const ref = doc(db, \"messages\", \"frontPageMessages\");\n\n    getDoc(ref).then((querySnapshot) => {\n      const { hoursOfOperation } = querySnapshot.data();\n\n      setDaysOfTheWeek(hoursOfOperation);\n    });\n  }, []);\n\n  return (\n    <div\n      style={{ height: \"600px\" }}\n      className=\"flex flex-col w-screen justify-evenly text-white\"\n    >\n      <Element name=\"hours\">\n        <div className=\"flex justify-center text-5xl\">VISIT US</div>\n      </Element>\n      <div className=\"flex justify-center text-xl text-center p-4\">\n        155 Main Street West, Picton, Prince Edward, ON, Canada\n      </div>\n      <div className=\"flex justify-center text-xl\">613-476-7056</div>\n      <div className=\"flex justify-center\">\n        <a href=\"tel:6134767056\">\n          <div className=\"rounded-full p-4 shadow bg-red-700 opacity-75 hover:opacity-100 font-semibold hover:text-white\">\n            CALL TO PLACE YOUR ORDER\n          </div>\n        </a>\n      </div>\n      <div id=\"/visit_us\" className=\"flex justify-center text-2xl\">\n        Hours of Operation\n      </div>\n\n      <div className=\"flex justify-center  text-xl\">\n        <div className=\"flex flex-col justify-center\">\n          {daysOfTheWeek.map((item) => (\n            <div key={item.order} className=\"flex justify-end p-2\">\n              <div>{item.day}</div>\n            </div>\n          ))}\n        </div>\n        <div className=\"w-12\" />\n        <div className=\"flex flex-col justify-center\">\n          {daysOfTheWeek.map((item) => (\n            <div key={item.order} className=\"flex justify-center p-2\">\n              <div>{item.hours}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VisitUs;\n","export const AppStyle = {\n  backgroundColor: {\n    backgroundImage: `linear-gradient(\n      rgba(0, 0, 0, 0.5),\n      rgba(0, 0, 0, 0.5)\n    ),url(\"https://firebasestorage.googleapis.com/v0/b/the-golden-inn-restaurant.appspot.com/o/goldenInnBackground.png?alt=media&token=c031b198-7ddc-4881-94e9-b61866bc15ca\")`,\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\nimport { Message } from \"semantic-ui-react\";\nimport { doc, getDoc } from \"firebase/firestore\";\n\nimport { db } from \"./firebase\";\nimport NavBarComponent from \"./components/Navbar/NavbarComponent\";\nimport MapComponent from \"./components/MapComponent\";\nimport DesktopMenuComponent from \"./components/Menu/DesktopMenuComponent\";\nimport DesktopLanding from \"./components/Landing\";\nimport DesktopVisitUs from \"./components/VisitUs\";\nimport { MenuItemContextProvider } from \"./context/menuContext\";\nimport { AppStyle } from \"./constants\";\n\nexport default function App() {\n  const [banner, setBanner] = useState({\n    visible: false,\n    title: \"\",\n    message: \"\",\n  });\n\n  useEffect(() => {\n    const ref = doc(db, \"messages\", \"bannerMessage\");\n\n    getDoc(ref).then((querySnapshot) => {\n      const { message, title, visible } = querySnapshot.data();\n\n      setBanner({\n        message,\n        title,\n        visible,\n      });\n    });\n  }, []);\n\n  return (\n    <Router style={AppStyle.backgroundColor}>\n      <div style={AppStyle.backgroundColor} className=\"font-advent\">\n        <MenuItemContextProvider>\n          <NavBarComponent />\n          {banner.visible && (\n            <Message warning style={{ textAlign: \"center\", margin: \"0\" }}>\n              <Message.Header>{banner.title}</Message.Header>\n              <p className=\"font-sans\">{banner.message}</p>\n            </Message>\n          )}\n          <Switch>\n            <Route exact path=\"/\">\n              <HomepageComponent />\n            </Route>\n            <Route path=\"/menu\">\n              <DesktopMenuComponent />\n            </Route>\n          </Switch>\n        </MenuItemContextProvider>\n        <a href=\"https://www.flaticon.com/free-icons/wok\" title=\"wok icons\">\n          Wok icons created by Freepik - Flaticon\n        </a>\n      </div>\n    </Router>\n  );\n}\n\nfunction initializeReactGA() {\n  ReactGA.initialize(\"UA-160054958-1\");\n  ReactGA.pageview(\"/\");\n}\n\nfunction HomepageComponent() {\n  const { backgroundColor } = AppStyle;\n  initializeReactGA();\n  return (\n    <div style={backgroundColor}>\n      <DesktopLanding />\n      <DesktopVisitUs />\n      <MapComponent />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/tailwind.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}