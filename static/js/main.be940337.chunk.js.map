{"version":3,"sources":["components/LandingComponent.js","components/context/menu-context.js","components/Navbar/MenuSearchComponent.js","components/Navbar/desktop/DesktopNavbarComponent.js","components/desktop/DesktopLandingComponent.js","components/VisitUsComponent.js","components/menu/dishes/AppetizersComponent.js","components/menu/dishes/RiceComponent.js","components/menu/dishes/Sweet&SourComponent.js","components/menu/dishes/EggFooYoungComponent.js","components/menu/dishes/VegetableAndAlmonds.js","components/menu/dishes/ChowMeinComponent.js","components/menu/dishes/CantoneseComponent.js","components/menu/dishes/SoupsComponent.js","components/menu/CombinationsComponent.js","components/menu/FullCourseComponent.js","components/menu/CanadianDishesComponent.js","components/menu/MenuListComponent.js","components/Navbar/mobile/MobileMenuComponent.js","components/Navbar/mobile/MobileNavbarComponent.js","components/Navbar/NavbarComponent.js","components/MapComponent.js","components/desktop/DesktopVisitUsComponent.js","components/desktop/menu/SidebarComponent.js","components/desktop/menu/DesktopMenuRoutesComponent.js","components/desktop/DesktopMenuComponent.js","App.js","serviceWorker.js","index.js"],"names":["LandingComponent","className","style","height","Image","src","width","filter","position","left","transform","padding","queries","small","matches","Header","size","color","top","console","log","process","firebase","initializeApp","apiKey","authDomain","projectId","db","firestore","MenuContext","React","createContext","MenuItemContextProvider","props","useState","menu","setMenu","useEffect","collection","get","then","querySnapshot","forEach","doc","data","Provider","value","children","initialState","isLoading","results","SearchExampleStandard","state","getAllDishes","allDishes","dishes","allCombinations","combinations","allDinners","dinners","result","Object","values","dish","newDishObj","title","name","description","price","push","image","handleResultSelect","e","setState","handleSearchChange","setTimeout","length","re","RegExp","_","escapeRegExp","context","test","this","Grid","Column","Search","aligned","loading","onSearchChange","debounce","leading","Component","contextType","DesktopNavbarComponentStyle","background","DesktopNavbarComponent","bigLogo","setBigLogo","divStyle","updateBigLogo","flag","Responsive","as","Menu","onlyComputer","fluid","secondary","Item","zIndex","onClick","to","LandingComponentStyle","textAlign","textShadow","objectFit","fontSize","DesktopLandingComponent","imageStyle","textStyle","textStyleContainer","VisitUsComponent","fontWeight","href","Button","Table","basic","celled","collapsing","Body","day","hours","map","Row","key","Cell","AppetizersComponent","useContext","getAppetizers","appetizers","mobile","Segment","Group","Card","Content","floated","RiceComponent","getRice","Rice","SweetAndSourComponent","getSweetAndSour","SweetAndSour","EggFooYoungComponent","getEggFooYoung","EggFooYoung","eggFooYoung","VegtablesAndAlmondsComponent","getVegtablesAndAlmonds","VegtablesAndAlmonds","vA","ChowMeinComponentComponent","getChowMeinComponent","ChowMeinComponent","chowMein","CantoneseComponentComponent","getCantoneseComponent","CantoneseComponent","cantonese","List","paddingTop","bottom","right","Popup","trigger","avatar","hideOnScroll","flowing","rounded","Description","paddingBottom","SoupsComponent","getSoupsComponent","soups","CombinationsComponent","getCombinations","Combinations","display","DinnersComponent","getDinners","Dinners","CanadianComponent","getCanadianComponent","canadian","MenuListComponenet","activeIndex","setActiveIndex","handleClick","index","Accordion","styled","Title","active","Icon","MenuStyle","MenuComponent","Modal","closeIcon","maxHeight","overflow","content","SmallMobileComponent","onlyMobile","RegularMobileComponent","MobileNavBarComponent","NavbarComponent","menuItems","MobileNavbarComponent","MapComponent","url","id","DesktopVisitUsComponentStyle","DesktopVisitUsComponent","address","table","SidebarComponent","setDefaultFalse","setActiveIndeex","Sidebar","animation","icon","vertical","visible","titleProps","boxShadow","menuRouteStyle","paddingLeft","paddingRight","DesktopMenuRoutesComponent","menuItemStyle","Pusher","path","DesktopMenuComponentStyle","DesktopMenuComponent","sidebarContainerStyle","isDefault","setIsDefault","Pushable","getDefault","AppStyle","backgroundColor","HomepageComponent","App","basename","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.be940337.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./LandingComponent.css\";\nimport Media from \"react-media\";\n\nimport { Image, Header } from \"semantic-ui-react\";\n\nconst LandingComponent = () => {\n  return (\n    <div className=\"divStyle\" style={{ height: \"250px\" }}>\n      <Image\n        src=\"https://img1.wsimg.com/isteam/stock/107160/:/rs=h:1026\"\n        className=\"image\"\n        style={{ width: \"100%\", filter: \"brightness(55%)\" }}\n      />\n      <div\n        style={{\n          position: \"relative\",\n          left: \"50%\",\n          transform: \"translate(-50%, -125%)\",\n          padding: \"5%\"\n        }}\n      >\n        <Media\n          queries={{\n            small: \"(max-width: 320px)\"\n          }}\n        >\n          {matches => (\n            <Fragment>\n              {matches.small && (\n                <Header\n                  size=\"huge\"\n                  style={{ color: \"white\", position: 'absolute', top: '-40%' }}\n                >\n                  WELCOME TO THE GOLDEN INN\n                </Header>\n              )}\n              {!matches.small && (\n                <Header size=\"huge\" style={{ color: \"white\" }}>\n                  WELCOME TO THE GOLDEN INN\n                </Header>\n              )}\n            </Fragment>\n          )}\n        </Media>\n\n        <Header size=\"small\" style={{ color: \"white\" }}>\n          Serving authentic Chinese food for over 25 years\n        </Header>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingComponent;\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\n\nconsole.log(process.env.REACT_APP_FIREBASE_PROJECT_ID);\n\n// Initialize Cloud Firestore through Firebase\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIRE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\n});\n\nvar db = firebase.firestore();\n\nconst MenuContext = React.createContext([{}, () => {}]);\n\nconst MenuItemContextProvider = (props) => {\n  const [menu, setMenu] = useState({});\n\n  useEffect(() => {\n    db.collection(\"menu-items\")\n      .get()\n      .then(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          setMenu(doc.data());\n        });\n      });\n  }, []);\n  return (\n    <MenuContext.Provider value={[menu, setMenu]}>\n      {props.children}\n    </MenuContext.Provider>\n  );\n};\n\nexport { MenuContext, MenuItemContextProvider };\n","import _ from \"lodash\";\nimport faker from \"faker\";\nimport React, { Component, useContext } from \"react\";\nimport { Search, Grid, Header, Segment, Card, Image } from \"semantic-ui-react\";\nimport { MenuContext } from \"../context/menu-context\";\n\nconst style = {\n  position: \"relative\"\n};\n\n// const [menu, setMenu] = useContext(MenuContext);\n\nconst initialState = { isLoading: false, results: [], value: \"\" };\n\nexport default class SearchExampleStandard extends Component {\n  state = initialState;\n  static contextType = MenuContext;\n\n  getAllDishes = menu => {\n    const allDishes = menu.dishes;\n    const allCombinations = menu.combinations;\n    const allDinners = menu.dinners;\n    const result = [];\n\n    Object.values(allDishes).forEach(value => {\n      Object.values(value).forEach(dish => {\n        const newDishObj = {\n          title: dish.name,\n          description: dish.description,\n          price: dish.price\n        };\n        result.push(newDishObj);\n      });\n    });\n    Object.values(allCombinations).forEach(dish => {\n      const newDishObj = {\n        title: dish.name,\n        description: dish.description,\n        price: dish.price,\n        image: dish.image\n      };\n      result.push(newDishObj);\n    });\n    Object.values(allDinners).forEach(dish => {\n      const newDishObj = {\n        title: dish.name,\n        description: dish.description,\n        price: dish.price\n      };\n      result.push(newDishObj);\n    });\n    return result;\n  };\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState);\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n      const isMatch = result => re.test(result.title);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(this.getAllDishes(this.context[0]), isMatch)\n      });\n    }, 300);\n  };\n  render() {\n    const { isLoading, value, results } = this.state;\n\n    return (\n      <Grid>\n        <Grid.Column width={4} style={style}>\n          <div>\n            <Search\n              aligned={\"left\"}\n              loading={isLoading}\n              // onResultSelect={this.handleResultSelect}\n              onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                leading: true\n              })}\n              results={results}\n              value={value}\n              {...this.props}\n            ></Search>\n          </div>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Responsive, Menu, Header, Image } from \"semantic-ui-react\";\nimport MenuSearchComponent from \"../MenuSearchComponent\";\n\nimport { Link } from \"react-router-dom\";\n\nconst DesktopNavbarComponentStyle = {\n  divStyle: {\n    background: \"#d9c8b5\",\n    padding: \"0 2em\"\n  }\n};\n\nconst DesktopNavbarComponent = () => {\n  const [bigLogo, setBigLogo] = useState(true);\n  const { divStyle } = DesktopNavbarComponentStyle;\n\n  /**\n   * Updates to big logo state\n   */\n  const updateBigLogo = (flag) => {\n    setBigLogo(true);\n  }\n\n  /**\n   * Updates to small logo state\n   */\n  const updateSmallLogo = () => {\n    setBigLogo(false);\n  }\n\n  /**\n   *Renders logo according to state\n   */\n  const generateLogo = () => {\n    if (bigLogo) {\n      return (\n        <Menu.Item style={{ position: \"absolute\", top: \"5%\", zIndex: \"10\" }} onClick={updateBigLogo}>\n          <Link to=\"/\">\n            <Image size=\"small\" src=\"https://i.imgur.com/7SBSyFL.png\" />\n          </Link>\n        </Menu.Item>\n      );\n    } else {\n      return (\n        <Menu.Item onClick={updateBigLogo}>\n          <Link to=\"/\">\n            <Image size=\"tiny\" src=\"https://i.imgur.com/wTWZiYT.png\" />\n          </Link>\n        </Menu.Item>\n      );\n    }\n  };\n\n  return (\n    <Responsive\n      as={Menu}\n      {...Responsive.onlyComputer}\n      style={divStyle}\n      fluid\n      secondary\n    >\n      {generateLogo()}\n\n      <Menu.Menu position=\"right\">\n        <Menu.Item name=\"Menu\" onClick={updateSmallLogo}>\n          <Link to=\"/menu\">\n            <Header as=\"h4\">Menu</Header>\n          </Link>\n        </Menu.Item>\n        <Menu.Item name=\"About\">\n          <Header as=\"h4\">About</Header>\n        </Menu.Item>\n        <Menu.Item>\n          <MenuSearchComponent />\n        </Menu.Item>\n      </Menu.Menu>\n    </Responsive>\n  );\n};\n\nexport default DesktopNavbarComponent;\n","import React from \"react\";\nimport DesktopNavbarComponent from \"../Navbar/desktop/DesktopNavbarComponent\";\nimport { Image, Header } from \"semantic-ui-react\";\nimport LandingComponent from \"../LandingComponent\";\n\nconst LandingComponentStyle = {\n  divStyle: {\n    textAlign: \"center\",\n    position: \"relative\",\n    textShadow: \"0 1px black\",\n    height: '500px'\n  },\n  imageStyle: {\n    width: \"100%\",\n    height: '500px',\n    filter: \"brightness(55%)\",\n    objectFit: 'cover'\n  },\n  textStyleContainer: {\n    position: \"relative\",\n          left: \"50%\",\n          transform: \"translate(-50%, -125%)\",\n          padding: \"5%\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontSize: '2.3em'\n  }\n};\n\nconst DesktopLandingComponent = props => {\n  const { divStyle, imageStyle, textStyle, textStyleContainer } = LandingComponentStyle;\n  return (\n    <div style={divStyle}>\n      <Image\n        src=\"https://img1.wsimg.com/isteam/stock/107160/:/rs=h:1026\"\n        className=\"image\"\n        style={imageStyle}\n      />\n      <div style={textStyleContainer}>\n        <Header size=\"huge\" style={textStyle}>\n          WELCOME TO THE GOLDEN INN\n        </Header>\n        <Header size=\"small\" style={textStyle}>\n          Serving authentic Chinese food for over 25 years\n        </Header>\n      </div>\n    </div>\n  );\n};\n\nexport default DesktopLandingComponent;\n","import React from \"react\";\n\nimport { Header, Table, Button } from \"semantic-ui-react\";\nimport \"./VisitUsComponent.css\";\n\nimport media from 'react-media';\n\nconst VisitUsComponent = () => {\n  const daysOfTheWeek = [\n    { day: \"Mon\", hours: \"Closed\" },\n    { day: \"Tue\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Wed\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Thurs\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Fri\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Sat\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Sun\", hours: \"11:30 a.m. – 09:00 p.m.\" }\n  ];\n\n  return (\n    <div className=\"visitUsDivStyle\">\n      <Header size=\"large\" style={{ color: \"black\" }}>\n        VISIT US\n      </Header>\n      <Header\n        size=\"tiny\"\n        style={{ color: \"black\", fontWeight: \"365\", textShadow: \"0 1px grey\" }}\n      >\n        155 Main Street West, Picton, Prince Edward, ON, Canada\n      </Header>\n      <Header size=\"medium\">613-476-7056</Header>\n      <a href=\"tel:+613-476-7056\">\n        <Button color=\"google plus\">Call to place your order</Button>\n      </a>\n      <Header size=\"medium\">Hours of operation</Header>\n      <Table basic=\"very\" celled collapsing className=\"hoursOfOperationsStyle\">\n        <Table.Body className=\"hoursOfOperationsTableBodyStyle\">\n          {daysOfTheWeek.map(day => {\n            return (\n              <Table.Row key={day.day}>\n                <Table.Cell>\n                  <div className=\"hoursOfOperationCellStyle\">\n                    <span className=\"hoursFontDay\">{day.day}</span>\n                    <span\n                      style={{\n                        color: \"black\",\n                        fontWeight: 365,\n                        textShadow: \"0 1px grey\",\n                        fontSize: \"1em\"\n                      }}\n                    >\n                      {day.hours}\n                    </span>\n                  </div>\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\nexport default VisitUsComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport Media from 'react-media';\nimport { Segment, Card, Header } from \"semantic-ui-react\";\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst AppetizersComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getAppetizers = () => {\n    if (menu.dishes) {\n      let appetizers = menu.dishes.appetizers;\n      return Object.values(appetizers);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n            {getAppetizers().map(dish => {\n              return (\n                <Segment key={dish.name}>\n                  <Card.Content>\n                    <Header\n                      as=\"h4\"\n                      floated=\"right\"\n                      color=\"green\"\n                      style={{ fontWeight: \"400\" }}\n                    >\n                      {dish.price}\n                    </Header>\n                    <Card.Header>\n                      <Header as=\"h4\">{dish.name}</Header>\n                    </Card.Header>\n                    {dish.description && (\n                      <Header as=\"h5\" color=\"grey\">\n                        {dish.description}\n                      </Header>\n                    )}\n                  </Card.Content>\n                </Segment>\n              );\n            })}\n          </Segment.Group>\n           \n          )}\n          {!matches.mobile && (\n            <Card.Group>\n            {getAppetizers().map(dish => {\n              return (\n                <Card key={dish.name}>\n                  <Card.Content>\n                    <Header\n                      as=\"h4\"\n                      floated=\"right\"\n                      color=\"green\"\n                      style={{ fontWeight: \"400\" }}\n                    >\n                      {dish.price}\n                    </Header>\n                    <Card.Header>\n                      <Header as=\"h4\">{dish.name}</Header>\n                    </Card.Header>\n                    {dish.description && (\n                      <Header as=\"h5\" color=\"grey\">\n                        {dish.description}\n                      </Header>\n                    )}\n                  </Card.Content>\n                </Card>\n              );\n            })}\n          </Card.Group>\n            \n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default AppetizersComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Container } from \"semantic-ui-react\";\nimport Media from 'react-media';\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst RiceComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getRice = () => {\n    if (menu.dishes) {\n      let Rice = menu.dishes.Rice;\n      return Object.values(Rice);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getRice().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Card.Group>\n              {getRice().map(dish => {\n                return (\n                  <Card key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Card>\n                );\n              })}\n            </Card.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default RiceComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst SweetAndSourComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getSweetAndSour = () => {\n    if (menu.dishes) {\n      let SweetAndSour = menu.dishes[\"sweet&Sour\"];\n      return Object.values(SweetAndSour);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getSweetAndSour().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Card.Group>\n              {getSweetAndSour().map(dish => {\n                return (\n                  <Card key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Card>\n                );\n              })}\n            </Card.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default SweetAndSourComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header } from \"semantic-ui-react\";\nimport Media from 'react-media';\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst EggFooYoungComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getEggFooYoung = () => {\n    if (menu.dishes) {\n      let EggFooYoung = menu.dishes.eggFooYoung;\n      return Object.values(EggFooYoung);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getEggFooYoung().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Card.Group>\n              {getEggFooYoung().map(dish => {\n                return (\n                  <Card key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Card>\n                );\n              })}\n            </Card.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default EggFooYoungComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst VegtablesAndAlmondsComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getVegtablesAndAlmonds = () => {\n    if (menu.dishes) {\n      let VegtablesAndAlmonds = menu.dishes.vA;\n      return Object.values(VegtablesAndAlmonds);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getVegtablesAndAlmonds().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Card.Group>\n              {getVegtablesAndAlmonds().map(dish => {\n                return (\n                  <Card key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Card>\n                );\n              })}\n            </Card.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default VegtablesAndAlmondsComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst ChowMeinComponentComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getChowMeinComponent = () => {\n    if (menu.dishes) {\n      let ChowMeinComponent = menu.dishes.chowMein;\n      return Object.values(ChowMeinComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getChowMeinComponent().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Card.Group>\n              {getChowMeinComponent().map(dish => {\n                return (\n                  <Card key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Card>\n                );\n              })}\n            </Card.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default ChowMeinComponentComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Card, Header, List, Image, Popup } from \"semantic-ui-react\";\nimport { MenuContext } from \"../../context/menu-context\";\nimport Media from \"react-media\";\nconst CantoneseComponentComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getCantoneseComponent = () => {\n    if (menu.dishes) {\n      let CantoneseComponent = menu.dishes.cantonese;\n      return Object.values(CantoneseComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <List style={{position: 'relative', top: '15px'}}>\n              {getCantoneseComponent().map(dish => {\n                return (\n                  <List.Item key={dish.name} style={{ paddingTop: \"5%\" }}>\n                    <Card.Content style={{ left: \"15px\" }}>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{\n                          fontWeight: \"400\",\n                          position: \"relative\",\n                          bottom: \"25px\"\n                        }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header\n                        style={{\n                          position: \"relative\",\n                          right: '15px',\n                          bottom: \"25px\"\n                        }}\n                      >\n                        <Popup\n                          trigger={\n                            <Image\n                              avatar={true}\n                              src={dish.image}\n                              size=\"tiny\"\n                              floated=\"left\"\n                            />\n                          }\n                          hideOnScroll\n                          flowing\n                        >\n                          <Image src={dish.image} size=\"medium\" rounded />\n                        </Popup>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Card.Description>\n                          <Header as=\"h5\" color=\"grey\">\n                            {dish.description}\n                          </Header>\n                        </Card.Description>\n                      )}\n                    </Card.Content>\n                  </List.Item>\n                );\n              })}\n            </List>\n          )}\n          {!matches.mobile && (\n            <Card.Group style={{ paddingBottom: \"50px\" }}>\n              {getCantoneseComponent().map(dish => {\n                return (\n                  <Card key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Card>\n                );\n              })}\n            </Card.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default CantoneseComponentComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst SoupsComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getSoupsComponent = () => {\n    if (menu.dishes) {\n      let SoupsComponent = menu.dishes.soups;\n      return Object.values(SoupsComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getSoupsComponent().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Card.Group>\n              {getSoupsComponent().map(dish => {\n                return (\n                  <Card key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Card>\n                );\n              })}\n            </Card.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default SoupsComponent;\n","import React, { useState, Fragment, useContext } from \"react\";\nimport { Card, Header, List, Image, Popup } from \"semantic-ui-react\";\nimport { MenuContext } from \"../context/menu-context\";\nimport Media from \"react-media\";\n\nconst CombinationsComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getCombinations = () => {\n    if (menu.combinations) {\n      let Combinations = menu.combinations;\n      return Object.values(Combinations);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <List>\n              {getCombinations().map(dish => {\n                return (\n                  <List.Item key={dish.name} style={{ paddingTop: \"5%\" }}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{\n                          fontWeight: \"400\",\n                          position: \"relative\",\n                          bottom: \"25px\"\n                        }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header\n                        style={{\n                          position: \"relative\",\n                          right: \"15px\",\n                          bottom: \"25px\"\n                        }}\n                      >\n                        <Popup\n                          trigger={\n                            <Image\n                              avatar={true}\n                              src={dish.image}\n                              size=\"tiny\"\n                              floated=\"left\"\n                            />\n                          }\n                          hideOnScroll\n                          flowing\n                        >\n                          <Image src={dish.image} size=\"medium\" rounded />\n                        </Popup>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Card.Description\n                          style={{\n                            display: \"flex\",\n                            position: \"relative\",\n                            bottom: \"25px\"\n                          }}\n                        >\n                          <Header as=\"h5\" color=\"grey\">\n                            {dish.description}\n                          </Header>\n                        </Card.Description>\n                      )}\n                    </Card.Content>\n                  </List.Item>\n                );\n              })}\n            </List>\n          )}\n          {!matches.mobile && (\n            <Card.Group>\n              {getCombinations().map(dish => {\n                return (\n                  <Card key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Card>\n                );\n              })}\n            </Card.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default CombinationsComponent;\n","import React, { useState, Fragment, useContext } from \"react\";\nimport { Segment, Card, Header, Container } from \"semantic-ui-react\";\nimport Media from 'react-media'\n\nimport { MenuContext } from \"../context/menu-context\";\n\nconst DinnersComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getDinners = () => {\n    if (menu.dinners) {\n      let Dinners = menu.dinners;\n      return Object.values(Dinners);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n            {getDinners().map(dish => {\n              return (\n                <Segment key={dish.name}>\n                  <Card.Content>\n                    <Header\n                      as=\"h4\"\n                      floated=\"right\"\n                      color=\"green\"\n                      style={{ fontWeight: \"400\" }}\n                    >\n                      {dish.price}\n                    </Header>\n                    <Card.Header>\n                      <Header as=\"h4\">{dish.name}</Header>\n                    </Card.Header>\n                    {dish.description && (\n                      <Header as=\"h5\" color=\"grey\">\n                        {dish.description}\n                      </Header>\n                    )}\n                  </Card.Content>\n                </Segment>\n              );\n            })}\n          </Segment.Group>\n           \n          )}\n          {!matches.mobile && (\n            <Card.Group>\n            {getDinners().map(dish => {\n              return (\n                <Card key={dish.name}>\n                  <Card.Content>\n                    <Header\n                      as=\"h4\"\n                      floated=\"right\"\n                      color=\"green\"\n                      style={{ fontWeight: \"400\" }}\n                    >\n                      {dish.price}\n                    </Header>\n                    <Card.Header>\n                      <Header as=\"h4\">{dish.name}</Header>\n                    </Card.Header>\n                    {dish.description && (\n                      <Header as=\"h5\" color=\"grey\">\n                        {dish.description}\n                      </Header>\n                    )}\n                  </Card.Content>\n                </Card>\n              );\n            })}\n          </Card.Group>\n            \n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default DinnersComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../context/menu-context\";\n\nconst CanadianComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getCanadianComponent = () => {\n    if (menu.dishes) {\n      let CanadianComponent = menu.dishes.canadian;\n      return Object.values(CanadianComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getCanadianComponent().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Card.Group>\n              {getCanadianComponent().map(dish => {\n                return (\n                  <Card key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Card>\n                );\n              })}\n            </Card.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default CanadianComponent;\n","import React, { useState } from \"react\";\nimport \"./MenuListComponent.css\"\nimport { Accordion, Icon, Header } from \"semantic-ui-react\";\n\nimport AppetizersComponent from \"./dishes/AppetizersComponent\";\nimport RiceComponent from \"./dishes/RiceComponent\";\nimport SweetAndSourComponent from \"./dishes/Sweet&SourComponent\";\nimport EggFooYoungComponent from \"./dishes/EggFooYoungComponent\";\nimport VegtablesAndAlmondsComponent from \"./dishes/VegetableAndAlmonds\";\nimport ChowMeinComponentComponent from \"./dishes/ChowMeinComponent\";\nimport CantoneseComponentComponent from \"./dishes/CantoneseComponent\";\nimport SoupsComponent from \"./dishes/SoupsComponent\";\nimport CombinationsComponent from \"./CombinationsComponent\";\nimport DinnersComponent from \"./FullCourseComponent\";\nimport CanadianComponent from \"./CanadianDishesComponent\";\n\nconst MenuListComponenet = () => {\n  const [activeIndex, setActiveIndex] = useState(-1);\n\n  const handleClick = (e, index) => {\n    if (index.index === activeIndex) {\n      setActiveIndex(-1);\n    } else {\n      setActiveIndex(index.index);\n    }\n  };\n\n  return (\n    <Accordion fluid styled className={\"accordian\"}>\n      <Accordion.Title\n        active={activeIndex === 0}\n        index={0}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Special Combination Plates\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 0}>\n        <CombinationsComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Full Court Dinner\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1}>\n        <DinnersComponent/>\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 2}\n        index={2}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Appetizers\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 2}>\n        <AppetizersComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 3}\n        index={3}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Rice (One size only)\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 3}>\n        <RiceComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 4}\n        index={4}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Sweet And Sour\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 4}>\n        <SweetAndSourComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 5}\n        index={5}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Egg Foo Young (grilled)\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 5}>\n        <EggFooYoungComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 6}\n        as={Header}\n        index={6}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Vegetable and Almonds\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 6}>\n        <VegtablesAndAlmondsComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 7}\n        as={Header}\n        index={7}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Chow Mein/Chop Suey\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 7}>\n        <ChowMeinComponentComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 8}\n        as={Header}\n        index={8}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Cantonese Style\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 8}>\n        <CantoneseComponentComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 9}\n        as={Header}\n        index={9}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Soups\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 9}>\n        <SoupsComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 10}\n        as={Header}\n        index={10}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Canadian Dishes\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 10}>\n        <CanadianComponent />\n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nexport default MenuListComponenet;\n","import React from 'react'\nimport { Button, Header, Icon, Modal, Menu } from 'semantic-ui-react'\nimport MenuListComponenet from '../../menu/MenuListComponent';\n\nconst MenuStyle = {\n  top: '5%',\n  width: '90%',\n  height: '80%'\n}\n\nconst MenuComponent = () => (\n  <Modal trigger={<Menu.Item position=\"left\"><Header>Menu</Header></Menu.Item>} closeIcon style={MenuStyle} >\n    <Modal.Content style={{maxHeight: 'calc(100vh - 10em)', overflow: 'auto'}}>\n      <Header as='h2' content='Menu' />\n      <MenuListComponenet/>\n    </Modal.Content>\n  </Modal>\n)\n\nexport default MenuComponent\n","import React, { Fragment } from \"react\";\nimport { Responsive, Menu } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport MenuComponent from \"./MobileMenuComponent\";\nimport MenuSearchComponent from \"../MenuSearchComponent\";\n\nconst SmallMobileComponent = () => {\n  return (\n    <Responsive\n      as={Menu}\n      {...Responsive.onlyMobile}\n      style={{\n        background: \"#d9c8b5\",\n        padding: \"3%\",\n        fontSize: \".90rem\"\n      }}\n    >\n      <MenuComponent />\n      <MenuSearchComponent style={{ right: \"100%\", position: \"relative\" }} />\n    </Responsive>\n  );\n};\n\nconst RegularMobileComponent = () => {\n  return (\n    <Responsive\n      as={Menu}\n      {...Responsive.onlyMobile}\n      style={{\n        background: \"#d9c8b5\",\n        padding: \"3%\"\n      }}\n    >\n      <MenuComponent />\n      <MenuSearchComponent style={{ right: \"100%\", position: \"relative\" }} />\n    </Responsive>\n  );\n};\n\nconst MobileNavBarComponent = menu => {\n  return (\n    <Media\n      queries={{\n        small: \"(max-width: 320px)\"\n        // medium: \"(min-width: 600px) and (max-width: 1199px)\",\n        // large: \"(min-width: 1200px)\"\n      }}\n    >\n      {matches => (\n        <Fragment>\n          {matches.small && <SmallMobileComponent />}\n          {!matches.small && <RegularMobileComponent />}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default MobileNavBarComponent;\n","import React, { useContext, Responsive } from \"react\";\nimport { Segment } from \"semantic-ui-react\";\n\nimport MobileNavbarComponent from \"./mobile/MobileNavbarComponent\";\nimport DesktopNavbarComponent from \"./desktop/DesktopNavbarComponent\";\n\nimport { MenuContext } from \"../context/menu-context\";\n\nconst NavbarComponent = ({ menuItems }) => {\n\n  const [menu, setMenu] = useContext(MenuContext);\n\n  return (\n    <div>\n      <Segment.Group>\n        <MobileNavbarComponent menu={menu}/>\n        <DesktopNavbarComponent menu ={menu}/>\n      </Segment.Group>\n    </div>\n  );\n};\n\nexport default NavbarComponent;","import React from \"react\";\nimport Iframe from \"react-iframe\";\n\nconst MapComponent = () => {\n  return (\n    <div>\n      <Iframe\n        url=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7025.307316203426!2d-77.14187548434793!3d44.00714172541031!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89d7ca541acadc9d%3A0xe6740b299f5e525e!2s155%20Picton%20Main%20St%2C%20Prince%20Edward%2C%20ON!5e0!3m2!1sen!2sca!4v1581291195493!5m2!1sen!2sca\"\n        width=\"100%\"\n        height=\"450px\"\n        id=\"myId\"\n      />\n    </div>\n  );\n};\n\nexport default MapComponent;\n","import React from \"react\";\n\nimport { Header, Table, Button } from \"semantic-ui-react\";\n\nconst DesktopVisitUsComponentStyle = {\n  divStyle: {\n    position: \"relative\",\n    fontSize: \"1.5em\",\n  },\n  title: {\n    color: \"black\"\n  },\n  address: {\n    color: \"black\",\n    fontWeight: \"365\",\n    textShadow: \"0 1px grey\"\n  },\n  hours: {\n    color: \"black\",\n    fontWeight: 365,\n    textShadow: \"0 1px grey\",\n    fontSize: \"1em\"\n  },\n  table: {\n    padding: 0,\n    width: \"50%\",\n    display: \"inline-table\"\n  }\n};\n\nconst DesktopVisitUsComponent = () => {\n  const daysOfTheWeek = [\n    { day: \"Mon\", hours: \"Closed\" },\n    { day: \"Tue\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Wed\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Thurs\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Fri\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Sat\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Sun\", hours: \"11:30 a.m. – 09:00 p.m.\" }\n  ];\n\n  const { divStyle, title, hours, address, table } = DesktopVisitUsComponentStyle;\n\n  return (\n    <div className=\"visitUsDivStyle\" style={divStyle}>\n      <Header size=\"large\" style={title}>\n        VISIT US\n      </Header>\n      <Header size=\"tiny\" style={address}>\n        155 Main Street West, Picton, Prince Edward, ON, Canada\n      </Header>\n      <Header size=\"medium\">613-476-7056</Header>\n      <a href=\"tel:+613-476-7056\">\n        <Button color=\"google plus\">Call to place your order</Button>\n      </a>\n      <Header size=\"medium\">Hours of operation</Header>\n      <Table\n        basic=\"very\"\n        celled\n        collapsing\n        style={table}\n        size={\"large\"}\n      >\n        <Table.Body className=\"hoursOfOperationsTableBodyStyle\">\n          {daysOfTheWeek.map(day => {\n            return (\n              <Table.Row key={day.day}>\n                <Table.Cell>\n                  <div className=\"hoursOfOperationCellStyle\">\n                    <span className=\"hoursFontDay\">{day.day}</span>\n                    <span style={hours}>{day.hours}</span>\n                  </div>\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\nexport default DesktopVisitUsComponent;\n","import React, { useState } from \"react\";\nimport { Sidebar, Accordion, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst SidebarComponentStyle = {\n  sidebarStyle: { padding: \" 1.4em\" }\n};\n\nconst SidebarComponent = ({setDefaultFalse}) => {\n  const [activeIndex, setActiveIndeex] = useState(0);\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n    setActiveIndeex(newIndex);\n  };\n\n  return (\n    <Sidebar\n      as={Accordion}\n      animation=\"push\"\n      icon=\"labeled\"\n      vertical\n      visible={true}\n      styled\n      style={{background: '#f0f0f0'}}\n    >\n      <Link to=\"/menu/combinations\">\n        <Accordion.Title onClick={setDefaultFalse}>\n          <Icon />\n          Special Combination Plates\n        </Accordion.Title>\n      </Link>\n\n      <Link to=\"/menu/fullcourse\">\n        <Accordion.Title onClick={setDefaultFalse}>\n          <Icon />\n          Full Course Dinners\n        </Accordion.Title>\n      </Link>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Main Dishes\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1} styled={false}>\n        <Accordion style={{ boxShadow: \"none\", background: '#f0f0f0' }}>\n          <Link to=\"/menu/soups\">\n            <Accordion.Title onClick={setDefaultFalse}>Soups</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/appetizers\">\n            <Accordion.Title onClick={setDefaultFalse}>Appetizers</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/rice\">\n            <Accordion.Title onClick={setDefaultFalse}>Rice (One size)</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/eggFooYoung\">\n            <Accordion.Title onClick={setDefaultFalse}>Egg Foo Young (Grilled)</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/chowMein\">\n            <Accordion.Title onClick={setDefaultFalse}>Chow Mein/Chop Suey</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/sweetAndSour\">\n            <Accordion.Title onClick={setDefaultFalse}>Sweet and Sour</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/vegtablesAndAlmonds\">\n            <Accordion.Title onClick={setDefaultFalse}>Vegetables and Almonds</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/cantonese\">\n            <Accordion.Title onClick={setDefaultFalse}>Cantonese Style</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/canadian\">\n            <Accordion.Title onClick={setDefaultFalse}>Canadian Dishes</Accordion.Title>\n          </Link>\n        </Accordion>\n      </Accordion.Content>\n    </Sidebar>\n  );\n};\n\nexport default SidebarComponent;\n","import React, { useState } from \"react\";\nimport { Sidebar, Segment, Header } from \"semantic-ui-react\";\nimport { Route } from \"react-router-dom\";\nimport CombinationsComponent from \"../../menu/CombinationsComponent\";\nimport FullcourseComponenet from \"../../menu/FullCourseComponent\";\nimport SoupComponent from \"../../menu/dishes/SoupsComponent\";\nimport AppetizersComponent from \"../../menu/dishes/AppetizersComponent\";\nimport RiceComponent from \"../../menu/dishes/RiceComponent\";\nimport EggFooYoungComponent from \"../../menu/dishes/EggFooYoungComponent\";\nimport ChowMeinComponent from \"../../menu/dishes/ChowMeinComponent\";\nimport SweetAndSourComponent from \"../../menu/dishes/Sweet&SourComponent\";\nimport VegetablesAndAlmondsComponent from \"../../menu/dishes/VegetableAndAlmonds\";\nimport CantoneseComponent from \"../../menu/dishes/CantoneseComponent\";\nimport CanadianComponent from \"../../menu/CanadianDishesComponent\";\nimport SidebarComponent from \"./SidebarComponent\";\nconst menuRouteStyle = {\n  menuItemStyle: {\n    paddingLeft: \"50px\",\n    paddingRight: \"300px\",\n    paddingTop: \"50px\",\n    paddingBottom: \"50px\",\n    height: \"450px\"\n  }\n};\n\nconst DesktopMenuRoutesComponent = () => {\n  const { menuItemStyle } = menuRouteStyle;\n\n  return (\n    <Sidebar.Pusher style={{ padding: \" 2% 5%\", overflow: \"auto\" }}>\n      <Route path=\"/menu/combinations\">\n        <Segment basic>\n          <Header as=\"h3\">Special Combinations Plates</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <CombinationsComponent />\n        </div>\n      </Route>\n      <Route path=\"/menu/fullcourse\">\n        <Segment basic>\n          <Header as=\"h3\">Full Course Meals</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <FullcourseComponenet />\n        </div>\n      </Route>\n      <Route path=\"/menu/soups\">\n        <Segment basic>\n          <Header as=\"h3\">Soups</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <SoupComponent />\n        </div>\n      </Route>\n      <Route path=\"/menu/appetizers\">\n        <Segment basic>\n          <Header as=\"h3\">Appetizers</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <AppetizersComponent />\n        </div>\n      </Route>\n      <Route path=\"/menu/rice\">\n        <Segment basic>\n          <Header as=\"h3\">Rice</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <RiceComponent />\n        </div>\n      </Route>\n      <Route path=\"/menu/eggFooYoung\">\n        <Segment basic>\n          <Header as=\"h3\">Egg Foo Young (Grilled)</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <EggFooYoungComponent />\n        </div>\n      </Route>\n      <Route path=\"/menu/chowMein\">\n        <Segment basic>\n          <Header as=\"h3\">Chow Mein/Chop Suey</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <ChowMeinComponent />\n        </div>\n      </Route>\n      <Route path=\"/menu/sweetAndSour\">\n        <Segment basic>\n          <Header as=\"h3\">Sweet and Sour</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <SweetAndSourComponent />\n        </div>\n      </Route>\n      <Route path=\"/menu/vegtablesAndAlmonds\">\n        <Segment basic>\n          <Header as=\"h3\">Vegetables and Almonds</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <VegetablesAndAlmondsComponent />\n        </div>\n      </Route>\n      <Route path=\"/menu/cantonese\">\n        <Segment basic>\n          <Header as=\"h3\">Cantonese Style</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <CantoneseComponent />\n        </div>\n      </Route>\n      <Route path=\"/menu/canadian\">\n        <Segment basic>\n          <Header as=\"h3\">Canadian Dishes</Header>\n        </Segment>\n        <div style={menuItemStyle}>\n          <CanadianComponent />\n        </div>\n      </Route>\n    </Sidebar.Pusher>\n  );\n};\n\nexport default DesktopMenuRoutesComponent;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport { Sidebar, Header, Segment } from \"semantic-ui-react\";\nimport SideBarComponent from \"../desktop/menu/SidebarComponent\";\nimport CombinationsComponent from \"../menu/CombinationsComponent\";\n\nimport DesktopMenuRouteComponent from \"./menu/DesktopMenuRoutesComponent\";\n\nconst DesktopMenuComponentStyle = {\n  sidebarContainerStyle: {\n    height: \"600px\",\n    background: \"url(https://img1.wsimg.com/isteam/stock/107160/:/rs=h:1080)\"\n  },\n  sidebarStyle: { padding: \" 1.4em\" },\n  menuItemStyle: {\n    paddingLeft: \"50px\",\n    paddingRight: \"300px\",\n    paddingTop: \"50px\",\n    paddingBottom: \"50px\",\n    height: \"450px\",\n    width: \"1700px\"\n  }\n};\n\nconst DesktopMenuComponent = () => {\n  const { sidebarContainerStyle, menuItemStyle } = DesktopMenuComponentStyle;\n\n  const [isDefault, setIsDefault] = useState(true);\n\n  const setDefaultFalse = () => {\n    console.log(\"TURNING OFF DEFAULT\");\n    setIsDefault(false);\n  };\n\n  const getDefault = () => {\n    if (isDefault) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: \"10\",\n            left: \"20%\",\n            // overflow: \"auto\",\n            height: \"500px\",\n            top: \"8%\"\n          }}\n        >\n          <Segment basic>\n            <Header as=\"h3\">Special Combinations Plates</Header>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CombinationsComponent />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Router>\n      <Sidebar.Pushable style={sidebarContainerStyle}>\n        <SideBarComponent setDefaultFalse={setDefaultFalse} />\n        {getDefault()}\n        <DesktopMenuRouteComponent />\n      </Sidebar.Pushable>\n    </Router>\n  );\n};\n\nexport default DesktopMenuComponent;\n","import React, { Fragment } from \"react\";\nimport Media from \"react-media\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport LandingpageComponent from \"./components/LandingComponent\";\nimport DesktopLandingPageComponent from \"./components/desktop/DesktopLandingComponent\";\nimport VisitUsComponenet from \"./components/VisitUsComponent\";\nimport NavBarComponent from \"./components/Navbar/NavbarComponent\";\nimport MapComponent from \"./components/MapComponent\";\nimport DesktopVisitUsComponent from \"./components/desktop/DesktopVisitUsComponent\";\nimport DesktopMenuComponent from \"./components/desktop/DesktopMenuComponent\";\n\nimport { MenuItemContextProvider } from \"./components/context/menu-context\";\n\nconst AppStyle = {\n  backgroundColor: { background: \"#d9c8b5\" }\n};\n\nconst HomepageComponent = props => {\n  const { backgroundColor } = AppStyle;\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <div style={backgroundColor}>\n              <LandingpageComponent />\n              <VisitUsComponenet />\n            </div>\n          )}\n          {!matches.mobile && (\n            <div style={backgroundColor}>\n              <DesktopLandingPageComponent />\n              <DesktopVisitUsComponent />\n            </div>\n          )}\n          <MapComponent />\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nfunction App() {\n  return (\n    <Router style={AppStyle.backgroundColor} basename='/the-golden-inn'>\n      <div style={AppStyle.backgroundColor}>\n        <MenuItemContextProvider>\n          <NavBarComponent />\n\n          <Switch>\n            <Route exact path=\"/\">\n              <HomepageComponent />\n            </Route>\n\n            <Route exact path=\"/menu\">\n              <DesktopMenuComponent />\n            </Route>\n          </Switch>\n        </MenuItemContextProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}