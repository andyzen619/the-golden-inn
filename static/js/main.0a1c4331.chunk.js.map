{"version":3,"sources":["context/menu-context.js","components/menu/dishes/AppetizersComponent.js","components/menu/dishes/RiceComponent.js","components/menu/dishes/Sweet&SourComponent.js","components/menu/dishes/EggFooYoungComponent.js","components/menu/dishes/VegetableAndAlmonds.js","components/menu/dishes/ChowMeinComponent.js","components/menu/dishes/CantoneseComponent.js","components/menu/dishes/SoupsComponent.js","components/menu/CombinationsComponent.js","components/menu/FullCourseComponent.js","components/menu/CanadianDishesComponent.js","components/menu/MenuListComponent.js","components/Navbar/mobile/MobileMenuComponent.js","components/Navbar/MenuSearchComponent.js","components/Navbar/mobile/MobileNavbarComponent.js","components/Navbar/desktop/DesktopNavbarComponent.js","components/Navbar/NavbarComponent.js","components/MapComponent.js","components/desktop/menu/SidebarComponent.js","components/desktop/menu/DesktopMenuRoutesComponent.js","components/desktop/DesktopMenuComponent.js","components/Landing.js","components/VisitUs.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","db","firestore","MenuContext","React","createContext","MenuItemContextProvider","props","useState","menu","setMenu","useEffect","collection","get","then","querySnapshot","forEach","doc","data","Provider","value","children","AppetizersComponent","useContext","getAppetizers","dishes","appetizers","Object","values","queries","mobile","matches","Segment","Group","map","dish","key","name","Card","Content","Header","as","floated","color","style","fontWeight","price","description","Item","background","padding","boxShadow","divided","image","Image","src","size","Meta","RiceComponent","getRice","Rice","SweetAndSourComponent","getSweetAndSour","SweetAndSour","Popup","trigger","rounded","width","hideOnScroll","flowing","display","justifyContent","margin","borderRadius","label","content","icon","ribbon","EggFooYoungComponent","getEggFooYoung","EggFooYoung","eggFooYoung","VegtablesAndAlmondsComponent","getVegtablesAndAlmonds","VegtablesAndAlmonds","vA","ChowMeinComponentComponent","getChowMeinComponent","ChowMeinComponent","chowMein","CantoneseComponentComponent","getCantoneseComponent","CantoneseComponent","cantonese","textAlign","SoupsComponent","getSoupsComponent","soups","CombinationsComponent","getCombinations","combinations","Combinations","DinnersComponent","getDinners","dinners","Dinners","CanadianComponent","getCanadianComponent","canadian","MenuListComponenet","activeIndex","setActiveIndex","handleClick","e","index","Accordion","fluid","styled","className","Title","active","onClick","Icon","left","position","MenuStyle","top","height","MenuComponent","Modal","Menu","closeIcon","maxHeight","overflow","sub","initialState","isLoading","results","SearchExampleStandard","state","getAllDishes","allDishes","allCombinations","allDinners","result","newDishObj","title","push","handleResultSelect","_","setState","handleSearchChange","setTimeout","length","re","RegExp","lodash","escapeRegExp","filter","context","test","this","Grid","Column","Search","aligned","loading","onSearchChange","debounce","leading","Component","contextType","SmallMobileComponent","Responsive","onlyMobile","fontSize","right","RegularMobileComponent","MobileNavBarComponent","small","ScrollLink","Scroll","Link","DesktopNavbarComponent","textStyle","to","NavbarComponent","MobileNavbarComponent","MapComponent","url","id","SidebarComponent","setDefaultFalse","setActiveIndeex","Sidebar","animation","vertical","visible","titleProps","menuRouteStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","DesktopMenuRoutesComponent","menuItemStyle","Pusher","exact","path","basic","DesktopMenuComponentStyle","backgroundImage","DesktopMenuComponent","sidebarContainerStyle","setIsDefault","Pushable","console","log","DesktopLandingV2","prop","backgroundColor","VisitUs","daysOfTheWeek","setDaysOfTheWeek","hoursOfOperation","href","item","day","hours","AppStyle","HomepageComponent","ReactGA","initialize","pageview","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","message","banner","setBanner","Message","warning","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0bAIAA,IAASC,cAAc,CACrBC,OAAQC,0CACRC,WAAYD,4CACZE,UAAWF,8BAGN,IAAMG,EAAKN,IAASO,YAErBC,EAAcC,IAAMC,cAAc,CAAC,GAAI,eAEvCC,EAA0B,SAACC,GAAW,IAAD,EACjBC,mBAAS,IADQ,mBAClCC,EADkC,KAC5BC,EAD4B,KAYzC,OATAC,qBAAU,WACRV,EAAGW,WAAW,cACXC,MACAC,MAAK,SAACC,GACLA,EAAcC,SAAQ,SAACC,GACrBP,EAAQO,EAAIC,gBAGjB,IAED,kBAACf,EAAYgB,SAAb,CAAsBC,MAAO,CAACX,EAAMC,IACjCH,EAAMc,WC8DEC,EApFa,WAAO,IAAD,EACRC,qBAAWpB,GADH,mBACzBM,EADyB,KAG1Be,GAH0B,KAGV,WACpB,GAAIf,EAAKgB,OAAQ,CACf,IAAIC,EAAajB,EAAKgB,OAAOC,WAC7B,OAAOC,OAAOC,OAAOF,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAOG,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACGT,IAAgBU,KAAI,SAAAC,GACnB,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MACjB,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,QACnBR,EAAKY,oBASpBhB,EAAQD,QACR,kBAACkB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,yBAEbC,SAAO,GAEN5B,IAAgBU,KAAI,SAAAC,GACnB,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACbF,EAAKkB,OAAS,kBAACC,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,UAC5C,kBAAClB,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,wBCc1BW,EApFO,WAAO,IAAD,EACFnC,qBAAWpB,GADT,mBACnBM,EADmB,KAGpBkD,GAHoB,KAGV,WACd,GAAIlD,EAAKgB,OAAQ,CACf,IAAImC,EAAOnD,EAAKgB,OAAOmC,KACvB,OAAOjC,OAAOC,OAAOgC,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAO/B,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACG0B,IAAUzB,KAAI,SAAAC,GACb,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MACjB,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,QACnBR,EAAKY,oBASpBhB,EAAQD,QACR,kBAACkB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,yBAEbC,SAAO,GAENO,IAAUzB,KAAI,SAAAC,GACb,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACbF,EAAKkB,OAAS,kBAACC,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,UAC5C,kBAAClB,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,wB,SC8D1Bc,EApIe,WAAO,IAAD,EACVtC,qBAAWpB,GADD,mBAC3BM,EAD2B,KAG5BqD,GAH4B,KAGV,WACtB,GAAIrD,EAAKgB,OAAQ,CACf,IAAIsC,EAAetD,EAAKgB,OAAO,cAC/B,OAAOE,OAAOC,OAAOmC,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAOlC,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACG6B,IAAkB5B,KAAI,SAAAC,GACrB,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MAChBF,EAAKkB,OACJ,kBAACW,EAAA,EAAD,CACEC,QACE,kBAACX,EAAA,EAAD,CACEC,IAAKpB,EAAKkB,MACVX,QAAQ,QACRwB,SAAO,EACPtB,MAAO,CAAEuB,MAAO,UAGpBC,cAAY,EACZC,SAAO,GAEP,kBAACf,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,SAASU,SAAO,KAGjD,kBAAC5B,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,QACnBR,EAAKY,oBASpBhB,EAAQD,QACR,yBACEc,MAAO,CACL0B,QAAS,OACTC,eAAgB,iBAGjB,IACD,kBAACvB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,wBACXgB,MAAO,OAETf,SAAO,GAENU,IAAkB5B,KAAI,SAAAC,GACrB,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACd,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,mBAO7B,yBAAKH,MAAO,CAAEuB,MAAO,QAClBL,IAAkB5B,KAAI,SAAAC,GACrB,GAAIA,EAAKkB,MACP,OACE,kBAACC,EAAA,EAAD,CACEC,IAAKpB,EAAKkB,MACVG,KAAK,QACLU,SAAO,EACPtB,MAAO,CACL4B,OAAQ,OACRC,aAAc,QAEhBC,MAAO,CACL/B,MAAO,QACPgC,QAASxC,EAAKE,KACduC,KAAM,OACNC,OAAQ,QACRrB,KAAM,qBCjCjBsB,EApFc,WAAO,IAAD,EACTvD,qBAAWpB,GADF,mBAC1BM,EAD0B,KAG3BsE,GAH2B,KAGV,WACrB,GAAItE,EAAKgB,OAAQ,CACf,IAAIuD,EAAcvE,EAAKgB,OAAOwD,YAC9B,OAAOtD,OAAOC,OAAOoD,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAOnD,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACG8C,IAAiB7C,KAAI,SAAAC,GACpB,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MACjB,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,QACnBR,EAAKY,oBASpBhB,EAAQD,QACR,kBAACkB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,yBAEbC,SAAO,GAEN2B,IAAiB7C,KAAI,SAAAC,GACpB,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACbF,EAAKkB,OAAS,kBAACC,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,UAC5C,kBAAClB,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,wBCc1BmC,EApFsB,WAAO,IAAD,EACjB3D,qBAAWpB,GADM,mBAClCM,EADkC,KAGnC0E,GAHmC,KAGV,WAC7B,GAAI1E,EAAKgB,OAAQ,CACf,IAAI2D,EAAsB3E,EAAKgB,OAAO4D,GACtC,OAAO1D,OAAOC,OAAOwD,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAOvD,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACGkD,IAAyBjD,KAAI,SAAAC,GAC5B,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MACjB,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,QACnBR,EAAKY,oBASpBhB,EAAQD,QACR,kBAACkB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,yBAEbC,SAAO,GAEN+B,IAAyBjD,KAAI,SAAAC,GAC5B,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACbF,EAAKkB,OAAS,kBAACC,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,UAC5C,kBAAClB,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,wBC6D1BuC,EAnIoB,WAAO,IAAD,EACf/D,qBAAWpB,GADI,mBAChCM,EADgC,KAGjC8E,GAHiC,KAGV,WAC3B,GAAI9E,EAAKgB,OAAQ,CACf,IAAI+D,EAAoB/E,EAAKgB,OAAOgE,SACpC,OAAO9D,OAAOC,OAAO4D,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAO3D,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACGsD,IAAuBrD,KAAI,SAAAC,GAC1B,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MAChBF,EAAKkB,OACJ,kBAACW,EAAA,EAAD,CACEC,QACE,kBAACX,EAAA,EAAD,CACEC,IAAKpB,EAAKkB,MACVX,QAAQ,QACRwB,SAAO,EACPtB,MAAO,CAAEuB,MAAO,UAGpBC,cAAY,EACZC,SAAO,GAEP,kBAACf,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,SAASU,SAAO,KAGjD,kBAAC5B,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,QACnBR,EAAKY,oBASpBhB,EAAQD,QACR,yBACEc,MAAO,CACL0B,QAAS,OACTC,eAAgB,iBAGlB,kBAACvB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,wBACXgB,MAAO,OAETf,SAAO,GAENmC,IAAuBrD,KAAI,SAAAC,GAC1B,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACd,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,mBAO7B,yBAAKH,MAAO,CAAEuB,MAAO,QAClBoB,IAAuBrD,KAAI,SAAAC,GAC1B,GAAIA,EAAKkB,MACP,OACE,kBAACC,EAAA,EAAD,CACEC,IAAKpB,EAAKkB,MACVG,KAAK,QACLU,SAAO,EACPtB,MAAO,CACL4B,OAAQ,OACRC,aAAc,QAEhBC,MAAO,CACL/B,MAAO,QACPgC,QAASxC,EAAKE,KACduC,KAAM,OACNC,OAAQ,QACRrB,KAAM,qBC8BjBkC,EA7IqB,WAAO,IAAD,EAChBnE,qBAAWpB,GADK,mBACjCM,EADiC,KAGlCkF,GAHkC,KAGV,WAC5B,GAAIlF,EAAKgB,OAAQ,CACf,IAAImE,EAAqBnF,EAAKgB,OAAOoE,UACrC,OAAOlE,OAAOC,OAAOgE,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAO/D,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACG0D,IAAwBzD,KAAI,SAAAC,GAC3B,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MAChBF,EAAKkB,OACJ,kBAACW,EAAA,EAAD,CACEC,QACE,kBAACX,EAAA,EAAD,CACEC,IAAKpB,EAAKkB,MACVX,QAAQ,QACRwB,SAAO,EACPtB,MAAO,CAAEuB,MAAO,UAGpBC,cAAY,EACZC,SAAO,GAEP,kBAACf,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,SAASU,SAAO,KAGjD,kBAAC5B,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRoD,UAAU,SACVnD,MAAM,QACNC,MAAO,CACLC,WAAY,QAGbV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CACEC,GAAG,KACHE,MAAM,OACNC,MAAO,CACL0B,QAAS,OACTC,eAAgB,kBAGjBpC,EAAKY,oBASpBhB,EAAQD,QACR,yBACEc,MAAO,CACL0B,QAAS,OACTC,eAAgB,iBAGlB,kBAACvB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,wBACXgB,MAAO,OAETf,SAAO,GAENuC,IAAwBzD,KAAI,SAAAC,GAC3B,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACd,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,mBAO7B,yBAAKH,MAAO,CAAEuB,MAAO,QAClBwB,IAAwBzD,KAAI,SAAAC,GAC3B,GAAIA,EAAKkB,MACP,OACE,kBAACC,EAAA,EAAD,CACEC,IAAKpB,EAAKkB,MACVG,KAAK,QACLU,SAAO,EACPtB,MAAO,CACL4B,OAAQ,OACRC,aAAc,QAEhBC,MAAO,CACL/B,MAAO,QACPgC,QAASxC,EAAKE,KACduC,KAAM,OACNC,OAAQ,QACRrB,KAAM,qBC/CjBuC,EApFQ,WAAO,IAAD,EACHxE,qBAAWpB,GADR,mBACpBM,EADoB,KAGrBuF,GAHqB,KAGD,WACxB,GAAIvF,EAAKgB,OAAQ,CACf,IAAIsE,EAAiBtF,EAAKgB,OAAOwE,MACjC,OAAOtE,OAAOC,OAAOmE,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAOlE,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACG+D,IAAoB9D,KAAI,SAAAC,GACvB,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MACjB,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,QACnBR,EAAKY,oBASpBhB,EAAQD,QACR,kBAACkB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,yBAEbC,SAAO,GAEN4C,IAAoB9D,KAAI,SAAAC,GACvB,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACbF,EAAKkB,OAAS,kBAACC,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,UAC5C,kBAAClB,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,wBC2E1BmD,EA1Ie,WAAO,IAAD,EACV3E,qBAAWpB,GADD,mBAC3BM,EAD2B,KAG5B0F,GAH4B,KAGV,WACtB,GAAI1F,EAAK2F,aAAc,CACrB,IAAIC,EAAe5F,EAAK2F,aACxB,OAAOzE,OAAOC,OAAOyE,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAOxE,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACGkE,IAAkBjE,KAAI,SAAAC,GACrB,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MAChBF,EAAKkB,OACJ,kBAACW,EAAA,EAAD,CACEC,QACE,kBAACX,EAAA,EAAD,CACEC,IAAKpB,EAAKkB,MACVX,QAAQ,QACRwB,SAAO,EACPtB,MAAO,CAAEuB,MAAO,UAGpBC,cAAY,EACZC,SAAO,GAEP,kBAACf,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,SAASU,SAAO,KAGjD,kBAAC5B,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CACEC,GAAG,KACHE,MAAM,OACNC,MAAO,CACL0B,QAAS,OACTC,eAAgB,kBAGjBpC,EAAKY,oBASpBhB,EAAQD,QACR,yBACEc,MAAO,CACL0B,QAAS,OACTC,eAAgB,iBAGlB,kBAACvB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,wBACXgB,MAAO,OAETf,SAAO,GAEN+C,IAAkBjE,KAAI,SAAAC,GACrB,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACd,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,mBAO7B,yBAAKH,MAAO,CAAEuB,MAAO,QAClBgC,IAAkBjE,KAAI,SAAAC,GACrB,GAAIA,EAAKkB,MACP,OACE,kBAACC,EAAA,EAAD,CACEC,IAAKpB,EAAKkB,MACVG,KAAK,QACLU,SAAO,EACPtB,MAAO,CACL4B,OAAQ,OACRC,aAAc,QAEhBC,MAAO,CACL/B,MAAO,QACPgC,QAASxC,EAAKE,KACduC,KAAM,OACNC,OAAQ,QACRrB,KAAM,qBCjDjB8C,EAjFU,WAAO,IAAD,EACL/E,qBAAWpB,GADN,mBACtBM,EADsB,KAGvB8F,GAHuB,KAGV,WACjB,GAAI9F,EAAK+F,QAAS,CAChB,IAAIC,EAAUhG,EAAK+F,QACnB,OAAO7E,OAAOC,OAAO6E,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAO5E,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACGsE,IAAarE,KAAI,SAAAC,GAChB,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MACjB,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,QACnBR,EAAKY,oBAUpBhB,EAAQD,QACR,kBAACkB,EAAA,EAAKf,MAAN,CAAYW,MAAO,CAAEK,WAAY,QAASC,QAAS,KAAMC,UAAW,yBAA2BC,SAAO,GACnGmD,IAAarE,KAAI,SAAAC,GAChB,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACbF,EAAKkB,OAAS,kBAACC,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,UAC5C,kBAAClB,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KACGtB,EAAKY,wBCmBjB2D,EApFW,WAAO,IAAD,EACNnF,qBAAWpB,GADL,mBACvBM,EADuB,KAGxBkG,GAHwB,KAGD,WAC3B,GAAIlG,EAAKgB,OAAQ,CACf,IAAIiF,EAAoBjG,EAAKgB,OAAOmF,SACpC,OAAOjF,OAAOC,OAAO8E,GAErB,MAAO,KAIX,OACE,kBAAC,IAAD,CAAO7E,QAAS,CAAEC,OAAQ,wBACvB,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,QACP,kBAACE,EAAA,EAAQC,MAAT,KACG0E,IAAuBzE,KAAI,SAAAC,GAC1B,OACE,kBAACH,EAAA,EAAD,CAASI,IAAKD,EAAKE,MACjB,kBAACC,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACR,EAAA,EAAKE,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACP,EAAA,EAAD,CAAQC,GAAG,KAAKE,MAAM,QACnBR,EAAKY,oBASpBhB,EAAQD,QACR,kBAACkB,EAAA,EAAKf,MAAN,CACEW,MAAO,CACLK,WAAY,QACZC,QAAS,KACTC,UAAW,yBAEbC,SAAO,GAENuD,IAAuBzE,KAAI,SAAAC,GAC1B,OACE,kBAACa,EAAA,EAAD,CAAMZ,IAAKD,EAAKE,MACbF,EAAKkB,OAAS,kBAACC,EAAA,EAAD,CAAOC,IAAKpB,EAAKkB,MAAOG,KAAK,UAC5C,kBAAClB,EAAA,EAAKC,QAAN,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,QACRC,MAAM,QACNC,MAAO,CAAEC,WAAY,QAEpBV,EAAKW,OAER,kBAACE,EAAA,EAAKR,OAAN,KACE,kBAACA,EAAA,EAAD,CAAQC,GAAG,MAAMN,EAAKE,OAEvBF,EAAKY,aACJ,kBAACC,EAAA,EAAKS,KAAN,KAAYtB,EAAKY,wBCwG1B8D,EApKY,WAAO,IAAD,EACOrG,oBAAU,GADjB,mBACxBsG,EADwB,KACXC,EADW,KAGzBC,EAAc,SAACC,EAAGC,GAClBA,EAAMA,QAAUJ,EAClBC,GAAgB,GAEhBA,EAAeG,EAAMA,QAIzB,OACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,QAAM,EAACC,UAAW,aACjC,kBAACH,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRI,MAAO,EACPO,QAAST,EACTvE,GAAID,KAEJ,kBAACkF,EAAA,EAAD,CAAMrF,KAAK,aANb,8BASA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,kBAAC,EAAD,OAGF,kBAACK,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRI,MAAO,EACPO,QAAST,EACTvE,GAAID,KAEJ,kBAACkF,EAAA,EAAD,CAAMrF,KAAK,aANb,sBAUA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,wBAAIlE,MAAO,CAAE4B,OAAQ,EAAGmD,KAAM,OAAQC,SAAU,aAAhD,0CAGA,kBAAC,EAAD,OAGF,kBAACT,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRI,MAAO,EACPO,QAAST,EACTvE,GAAID,KAEJ,kBAACkF,EAAA,EAAD,CAAMrF,KAAK,aANb,cASA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,kBAAC,EAAD,OAGF,kBAACK,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRI,MAAO,EACPO,QAAST,EACTvE,GAAID,KAEJ,kBAACkF,EAAA,EAAD,CAAMrF,KAAK,aANb,wBASA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,kBAAC,EAAD,OAGF,kBAACK,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRI,MAAO,EACPO,QAAST,EACTvE,GAAID,KAEJ,kBAACkF,EAAA,EAAD,CAAMrF,KAAK,aANb,kBASA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,kBAAC,EAAD,OAGF,kBAACK,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRI,MAAO,EACPO,QAAST,EACTvE,GAAID,KAEJ,kBAACkF,EAAA,EAAD,CAAMrF,KAAK,aANb,2BASA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,kBAAC,EAAD,OAGF,kBAACK,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRrE,GAAID,IACJ0E,MAAO,EACPO,QAAST,GAET,kBAACU,EAAA,EAAD,CAAMrF,KAAK,aANb,yBASA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,kBAAC,EAAD,OAGF,kBAACK,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRrE,GAAID,IACJ0E,MAAO,EACPO,QAAST,GAET,kBAACU,EAAA,EAAD,CAAMrF,KAAK,aANb,uBASA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,kBAACtB,EAAD,OAGF,kBAAC2B,EAAA,EAAUI,MAAX,aACEC,OAAwB,IAAhBV,EACRrE,GAAID,IACJ0E,MAAO,EACPO,QAAST,GAJX,KAKMxE,KAEJ,kBAACkF,EAAA,EAAD,CAAMrF,KAAK,aAPb,mBAUA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,kBAAClB,EAAD,OAGF,kBAACuB,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRrE,GAAID,IACJ0E,MAAO,EACPO,QAAST,GAET,kBAACU,EAAA,EAAD,CAAMrF,KAAK,aANb,SASA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,GACzB,kBAAC,EAAD,OAGF,kBAACK,EAAA,EAAUI,MAAX,CACEC,OAAwB,KAAhBV,EACRrE,GAAID,IACJ0E,MAAO,GACPO,QAAST,GAET,kBAACU,EAAA,EAAD,CAAMrF,KAAK,aANb,mBASA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,KAAhBV,GACzB,kBAAC,EAAD,SC1KFe,EAAY,CAChBC,IAAK,KACL3D,MAAO,MACP4D,OAAQ,OAyBKC,EAtBO,kBACpB,kBAACC,EAAA,EAAD,CACEhE,QACE,kBAACiE,EAAA,EAAKlF,KAAN,CAAW4E,SAAS,QAClB,yBAAKN,UAAU,sBAAf,SAGJa,WAAS,EACTvF,MAAOiF,GAEP,kBAACI,EAAA,EAAM1F,QAAP,CACEK,MAAO,CAAEwF,UAAW,qBAAsBC,SAAU,SAEpD,kBAAC7F,EAAA,EAAD,CAAQC,GAAG,MAAX,QAGA,kBAAC,EAAD,MACA,kBAACD,EAAA,EAAD,CAAQ8F,KAAG,EAAC7F,GAAG,MAAf,sC,4ECrBAG,G,OAAQ,CACZgF,SAAU,aAINW,GAAe,CAAEC,WAAW,EAAOC,QAAS,GAAIrH,MAAO,IAExCsH,G,2MACnBC,MAAQJ,G,EAGRK,aAAe,SAAAnI,GACb,IAAMoI,EAAYpI,EAAKgB,OACjBqH,EAAkBrI,EAAK2F,aACvB2C,EAAatI,EAAK+F,QAClBwC,EAAS,GA4Bf,OA1BArH,OAAOC,OAAOiH,GAAW7H,SAAQ,SAAAI,GAC/BO,OAAOC,OAAOR,GAAOJ,SAAQ,SAAAmB,GAC3B,IAAM8G,EAAa,CACjBC,MAAO/G,EAAKE,KACZU,YAAaZ,EAAKY,YAClBD,MAAOX,EAAKW,OAEdkG,EAAOG,KAAKF,SAGhBtH,OAAOC,OAAOkH,GAAiB9H,SAAQ,SAAAmB,GACrC,IAAM8G,EAAa,CACjBC,MAAO/G,EAAKE,KACZU,YAAaZ,EAAKY,YAClBD,MAAOX,EAAKW,OAEdkG,EAAOG,KAAKF,MAEdtH,OAAOC,OAAOmH,GAAY/H,SAAQ,SAAAmB,GAChC,IAAM8G,EAAa,CACjBC,MAAO/G,EAAKE,KACZU,YAAaZ,EAAKY,YAClBD,MAAOX,EAAKW,OAEdkG,EAAOG,KAAKF,MAEPD,G,EAGTI,mBAAqB,SAACC,EAAD,OAAML,EAAN,EAAMA,OAAN,OACnB,EAAKM,SAAS,CAAElI,MAAO4H,EAAOE,S,EAEhCK,mBAAqB,SAACF,EAAD,GAAmB,IAAbjI,EAAY,EAAZA,MACzB,EAAKkI,SAAS,CAAEd,WAAW,EAAMpH,UAEjCoI,YAAW,WACT,GAAI,EAAKb,MAAMvH,MAAMqI,OAAS,EAC5B,OAAO,EAAKH,SAASf,IAGvB,IAAMmB,EAAK,IAAIC,OAAOC,IAAOC,aAAa,EAAKlB,MAAMvH,OAAQ,KAG7D,EAAKkI,SAAS,CACZd,WAAW,EACXC,QAASmB,IAAOE,OAAO,EAAKlB,aAAa,EAAKmB,QAAQ,KAJxC,SAAAf,GAAM,OAAIU,EAAGM,KAAKhB,EAAOE,cAMxC,M,wEAEK,IAAD,EAC+Be,KAAKtB,MAAnCH,EADD,EACCA,UAAWpH,EADZ,EACYA,MAAOqH,EADnB,EACmBA,QAE1B,OACE,kBAACyB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAahG,MAAO,EAAGvB,MAAOA,GAC5B,6BACE,kBAACwH,EAAA,EAAD,eACEC,QAAS,OACTC,QAAS9B,EAET+B,eAAgBX,IAAOY,SAASP,KAAKV,mBAAoB,IAAK,CAC5DkB,SAAS,IAEXhC,QAASA,EACTrH,MAAOA,GACH6I,KAAK1J,e,GA3E4BmK,aAA9BhC,GAEZiC,YAAcxK,ECRvB,IAAMyK,GAAuB,WAC3B,OACE,kBAACC,EAAA,EAAD,eACEpI,GAAIyF,KACA2C,IAAWC,WAFjB,CAGElI,MAAO,CACLK,WAAY,UACZC,QAAS,KACT6H,SAAU,YAGZ,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAqBnI,MAAO,CAAEoI,MAAO,OAAQpD,SAAU,gBAKvDqD,GAAyB,WAC7B,OACE,kBAACJ,EAAA,EAAD,eACEpI,GAAIyF,KACA2C,IAAWC,WAFjB,CAGElI,MAAO,CACLK,WAAY,UACZC,QAAS,QAGX,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAqBN,MAAO,CAAEoI,MAAO,OAAQpD,SAAU,gBAsB9CsD,GAjBe,SAAAzK,GAC5B,OACE,kBAAC,IAAD,CACEoB,QAAS,CACPsJ,MAAO,wBAGR,SAAApJ,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQoJ,OAAS,kBAAC,GAAD,OAChBpJ,EAAQoJ,OAAS,kBAAC,GAAD,W,SC5CvBC,G,QAAaC,EAAOC,KA8CXC,GA7CgB,WAC7B,IAAMC,EAAY,qDAElB,OACE,yBACE5I,MAAO,CAAEK,WAAY,WACrBqE,UAAU,uCAEV,kBAACY,EAAA,EAAKlF,KAAN,CAAWsE,UAAU,gCACnB,kBAAC,IAAD,CAAMmE,GAAG,KACP,yBAAKnE,UAAS,UAAKkE,IAAnB,UAIJ,kBAACtD,EAAA,EAAKlF,KAAN,CAAWX,KAAK,OAAOiF,UAAU,gCAC/B,kBAAC,IAAD,CAAMmE,GAAG,SACP,yBAAKnE,UAAS,UAAKkE,IAAnB,UAIJ,kBAACtD,EAAA,EAAKlF,KAAN,CAAWX,KAAK,OAAOiF,UAAU,gCAC/B,kBAAC8D,GAAD,CAAYK,GAAG,YACb,kBAAC,IAAD,CAAMA,GAAG,KACP,4BAAQnE,UAAS,UAAKkE,IAAtB,eAKN,kBAACtD,EAAA,EAAKlF,KAAN,CAAWX,KAAK,OAAOiF,UAAU,gCAC/B,kBAAC,IAAD,CAAMmE,GAAG,KACP,kBAACL,GAAD,CAAYK,GAAG,SACb,4BAAQnE,UAAS,UAAKkE,IAAtB,aAKN,kBAACtD,EAAA,EAAKA,KAAN,CAAWZ,UAAU,gCACnB,kBAACY,EAAA,EAAKlF,KAAN,KACE,kBAAC,GAAD,UCTK0I,GA3BS,WAAO,IAAD,EACbnK,qBAAWpB,GAAnBM,EADqB,oBAG5B,OACE,6BACE,kBAACuB,EAAA,EAAQC,MAAT,KACE,kBAAC,IAAD,CAAOJ,QAAS,CAAEC,OAAQ,wBACvB,SAACC,GAAD,OACC,kBAAC,WAAD,KACGA,EAAQD,QACP,6BACE,kBAAC6J,GAAD,CAAuBlL,KAAMA,MAG/BsB,EAAQD,QACR,6BACE,kBAAC,GAAD,CAAwBrB,KAAMA,Y,UCNjCmL,GAfM,WACnB,OACE,kBAAC,WAAD,CAASvJ,KAAK,YACZ,yBAAKiF,UAAU,gCACb,kBAAC,KAAD,CACEuE,IAAI,qTACJ1H,MAAM,OACN4D,OAAO,QACP+D,GAAG,Y,UCoEEC,GA5EU,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAAqB,EACPxL,mBAAS,GADF,mBACvCsG,EADuC,KAC1BmF,EAD0B,KAS9C,OACE,kBAACC,GAAA,EAAD,CACEzJ,GAAI0E,IACJgF,UAAU,OACVvH,KAAK,UACLwH,UAAQ,EACRC,SAAS,EACThF,QAAM,EACNzE,MAAO,CAACK,WAAY,YAEpB,kBAAC,IAAD,CAAMwI,GAAG,sBACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GACxB,kBAACtE,EAAA,EAAD,MADF,+BAMF,kBAAC,IAAD,CAAM+D,GAAG,oBACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GACxB,kBAACtE,EAAA,EAAD,MADF,wBAMF,kBAACP,EAAA,EAAUI,MAAX,CACEC,OAAwB,IAAhBV,EACRI,MAAO,EACPO,QAjCc,SAACR,EAAGqF,GAAgB,IAC9BpF,EAAUoF,EAAVpF,MAER+E,EADiBnF,IAAgBI,GAAS,EAAIA,KAiC1C,kBAACQ,EAAA,EAAD,CAAMrF,KAAK,aALb,eAQA,kBAAC8E,EAAA,EAAU5E,QAAX,CAAmBiF,OAAwB,IAAhBV,EAAmBO,QAAQ,GACpD,kBAACF,EAAA,EAAD,CAAWvE,MAAO,CAAEO,UAAW,OAAQF,WAAY,YACjD,kBAAC,IAAD,CAAMwI,GAAG,eACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GAA1B,UAEF,kBAAC,IAAD,CAAMP,GAAG,oBACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GAA1B,eAEF,kBAAC,IAAD,CAAMP,GAAG,cACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GAA1B,oBAEF,kBAAC,IAAD,CAAMP,GAAG,qBACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GAA1B,4BAEF,kBAAC,IAAD,CAAMP,GAAG,kBACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GAA1B,sCAEF,kBAAC,IAAD,CAAMP,GAAG,sBACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GAA1B,mBAEF,kBAAC,IAAD,CAAMP,GAAG,6BACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GAA1B,2BAEF,kBAAC,IAAD,CAAMP,GAAG,mBACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GAA1B,oBAEF,kBAAC,IAAD,CAAMP,GAAG,kBACP,kBAACtE,EAAA,EAAUI,MAAX,CAAiBE,QAASuE,GAA1B,wBC1DNO,GACW,CACbC,YAAa,OACbC,aAAc,QACdC,WAAY,OACZC,cAAe,OACf5E,OAAQ,SAyJG6E,GArJoB,WAAO,IAChCC,EAAkBN,GAE1B,OACE,kBAACL,GAAA,EAAQY,OAAT,CAAgBlK,MAAO,CAAEM,QAAS,SAAUmF,SAAU,QAAUf,UAAU,cACxE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyF,OAAK,EAACC,KAAK,SAChB,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,+BACA,kBAACtE,EAAA,EAAKS,KAAN,mFAGE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,sBACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,+BACA,kBAACtE,EAAA,EAAKS,KAAN,mFAGE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,oBACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,qBACA,kBAACtE,EAAA,EAAKS,KAAN,6FAGE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,eACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,SACA,kBAACtE,EAAA,EAAKS,KAAN,KACE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,oBACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,cACA,kBAACtE,EAAA,EAAKS,KAAN,KACE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,cACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,wBACA,kBAACtE,EAAA,EAAKS,KAAN,KACE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,qBACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,2BACA,kBAACtE,EAAA,EAAKS,KAAN,KACE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,kBACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,qCACA,kBAACtE,EAAA,EAAKS,KAAN,KACE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAACrH,EAAD,QAGJ,kBAAC,IAAD,CAAOwH,KAAK,sBACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,kBACA,kBAACtE,EAAA,EAAKS,KAAN,KACE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,6BACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,0BACA,kBAACtE,EAAA,EAAKS,KAAN,KACE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAOG,KAAK,mBACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,mBACA,kBAACtE,EAAA,EAAKS,KAAN,KACE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAACjH,EAAD,QAGJ,kBAAC,IAAD,CAAOoH,KAAK,kBACV,kBAAChL,EAAA,EAAD,CAASiL,OAAK,GACZ,yBAAK3F,UAAU,iBAAf,mBACA,kBAACtE,EAAA,EAAKS,KAAN,KACE,kEAGJ,yBAAKb,MAAOiK,GACV,kBAAC,EAAD,WC7JNK,GACmB,CACrBnF,OAAQ,QACRoF,gBAAgB,8TA4DLC,GA5Cc,WAAO,IAC1BC,EAAyCH,GADhB,EAGC1M,oBAAS,GAHV,mBAGf8M,GAHe,WAkCjC,OACE,kBAAC,IAAD,KACE,kBAACpB,GAAA,EAAQqB,SAAT,CAAkB3K,MAAOyK,GACvB,kBAAC,GAAD,CAAkBrB,gBAhCA,WACtBwB,QAAQC,IAAI,uBACZH,GAAa,MA+BT,kBAAC,GAAD,SCEOI,GA7DU,SAACC,GACxB,IAAM9F,EAAY,CAChBC,IAAK,KACL3D,MAAO,MACP4D,OAAQ,OAGV,OACE,yBACEnF,MAAO,CAAEmF,OAAQ,SACjBT,UAAU,2CAEV,yBAAKA,UAAU,2BACb,yBACE1E,MAAO,CAAEgL,gBAAiB,WAC1BtG,UAAU,+CAEV,yBAAKA,UAAU,8CAAf,cACA,yBAAKA,UAAU,wCAAf,gBAGJ,yBAAKA,UAAU,+CAAf,+DAGA,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,wDACb,kBAAC,IAAD,CAAOzF,QAAS,CAAEC,OAAQ,wBACvB,SAACC,GAAD,OACC,kBAAC,WAAD,KACGA,EAAQD,QACP,6BACE,kBAACmG,EAAA,EAAD,CACEhE,QAAS,yBAAKqD,UAAU,sBAAf,QACTa,WAAS,EACTvF,MAAOiF,GAEP,kBAACI,EAAA,EAAM1F,QAAP,CACEK,MAAO,CACLwF,UAAW,qBACXC,SAAU,SAGZ,kBAAC7F,EAAA,EAAD,CAAQC,GAAG,MAAX,QACA,kBAAC,EAAD,MACA,kBAACD,EAAA,EAAD,CAAQ8F,KAAG,EAAC7F,GAAG,MAAf,uCAONV,EAAQD,QAAU,kBAAC,IAAD,CAAM2J,GAAG,QAAQnE,UAAU,kCAA3B,gBCSrBuG,GA9DC,WAAO,IAAD,EAEsBrN,mBAAS,IAF/B,mBAEbsN,EAFa,KAEEC,EAFF,KAkBpB,OAdApN,qBAAU,WAERV,EAAGW,WAAW,YACXK,IAAI,qBACJJ,MACAC,MAAK,SAACC,GAAmB,IAChBiN,EAAqBjN,EAAcG,OAAnC8M,iBAERD,EAAiBC,QAIpB,IAGD,yBACEpL,MAAO,CAAEmF,OAAQ,SACjBT,UAAU,oDAEV,kBAAC,WAAD,CAASjF,KAAK,SACZ,yBAAKiF,UAAU,gCAAf,aAEF,yBAAKA,UAAU,+CAAf,2DAGA,yBAAKA,UAAU,+BAAf,gBACA,yBAAKA,UAAU,uBACb,uBAAG2G,KAAK,kBACN,yBAAK3G,UAAU,kGAAf,8BAKJ,yBAAKwE,GAAG,YAAYxE,UAAU,gCAA9B,sBAIA,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,gCACZwG,EAAc5L,KAAI,SAACgM,GAAD,OACjB,yBAAK5G,UAAU,wBACb,6BAAM4G,EAAKC,UAIjB,yBAAK7G,UAAU,SACf,yBAAKA,UAAU,gCACZwG,EAAc5L,KAAI,SAACgM,GAAD,OACjB,yBAAK5G,UAAU,2BACb,6BAAM4G,EAAKE,eCzDZC,GAAW,CACpBT,gBAAiB,CACfT,gBAAgB,yPCmEtB,SAASmB,KAAqB,IACpBV,EAAoBS,GAApBT,gBAER,OAPAW,IAAQC,WAAW,kBACnBD,IAAQE,SAAS,KAOf,yBAAK7L,MAAOgL,GACV,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OChEN,IAAMc,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTnO,MAAK,SAAAwO,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7G,QACfwG,UAAUC,cAAcO,YAI1BnC,QAAQC,IACN,iHAKEyB,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB9B,QAAQC,IAAI,sCAGRyB,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAAC,GACLvC,QAAQuC,MAAM,4CAA6CA,M,OC1FjEC,IAASC,OAAO,mBFOD,WAAgB,IAAD,EACAzP,mBAAS,CACnC6L,SAAS,EACTnD,MAAO,GACPgH,QAAS,KAJiB,mBACrBC,EADqB,KACbC,EADa,KAsB5B,OAfAzP,qBAAU,WACRV,EAAGW,WAAW,YACXK,IAAI,iBACJJ,MACAC,MAAK,SAACC,GAAmB,IAAD,EACaA,EAAcG,OAA1CgP,EADe,EACfA,QAAShH,EADM,EACNA,MAAOmD,EADD,EACCA,QAExB+D,EAAU,CACRF,UACAhH,QACAmD,iBAGL,IAGD,kBAAC,IAAD,CAAQzJ,MAAOyL,GAAST,iBACtB,yBAAKhL,MAAOyL,GAAST,gBAAiBtG,UAAU,eAC9C,kBAAC,EAAD,KACE,kBAAC,GAAD,MACC6I,EAAO9D,SACN,kBAACgE,EAAA,EAAD,CAASC,SAAO,EAAC1N,MAAO,CAAEkD,UAAW,SAAUtB,OAAQ,MACrD,kBAAC6L,EAAA,EAAQ7N,OAAT,KAAiB2N,EAAOjH,OACxB,uBAAG5B,UAAU,aAAa6I,EAAOD,UAGrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnD,OAAK,EAACC,KAAK,KAChB,kBAACsB,GAAD,OAGF,kBAAC,IAAD,CAAOtB,KAAK,SACV,kBAAC,GAAD,SAIN,uBAAGiB,KAAK,0CAA0C/E,MAAM,aAAxD,+CElDQ,MAASqH,SAASC,eAAe,SDgB1C,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAI3Q,GAAwB8O,OAAOC,SAASZ,MACpDyC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMnP,GAAN,sBAEP4O,KAgEV,SAAiCO,EAAOC,GAEtC0B,MAAM3B,EAAO,CACX4B,QAAS,CAAE,iBAAkB,YAE5B/P,MAAK,SAAAgQ,GAEJ,IAAMC,EAAcD,EAASD,QAAQhQ,IAAI,gBAEnB,MAApBiQ,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAMpQ,MAAK,SAAAwO,GACjCA,EAAa6B,aAAarQ,MAAK,WAC7B8N,OAAOC,SAASuC,eAKpBpC,GAAgBC,EAAOC,MAG1BY,OAAM,WACLtC,QAAQC,IACN,oEAvFA4D,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAMpQ,MAAK,WACjC0M,QAAQC,IACN,iHAMJuB,GAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.0a1c4331.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\n\n// Initialize Cloud Firestore through Firebase\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIRE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n});\n\nexport const db = firebase.firestore();\n\nconst MenuContext = React.createContext([{}, () => { }]);\n\nconst MenuItemContextProvider = (props) => {\n  const [menu, setMenu] = useState({});\n\n  useEffect(() => {\n    db.collection(\"menu-items\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          setMenu(doc.data());\n        });\n      });\n  }, []);\n  return (\n    <MenuContext.Provider value={[menu, setMenu]}>\n      {props.children}\n    </MenuContext.Provider>\n  );\n};\n\nexport { MenuContext, MenuItemContextProvider };\n","import React, { useContext, Fragment } from \"react\";\nimport Media from \"react-media\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\n\nimport { MenuContext } from \"../../../context/menu-context\";\n\nconst AppetizersComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getAppetizers = () => {\n    if (menu.dishes) {\n      let appetizers = menu.dishes.appetizers;\n      return Object.values(appetizers);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getAppetizers().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\"\n              }}\n              divided\n            >\n              {getAppetizers().map(dish => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default AppetizersComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\nimport Media from 'react-media';\n\nimport { MenuContext } from \"../../../context/menu-context\";\n\nconst RiceComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getRice = () => {\n    if (menu.dishes) {\n      let Rice = menu.dishes.Rice;\n      return Object.values(Rice);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getRice().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\"\n              }}\n              divided\n            >\n              {getRice().map(dish => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default RiceComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Item, Image, Popup } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menu-context\";\n\nconst SweetAndSourComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getSweetAndSour = () => {\n    if (menu.dishes) {\n      let SweetAndSour = menu.dishes[\"sweet&Sour\"];\n      return Object.values(SweetAndSour);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getSweetAndSour().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    {dish.image && (\n                      <Popup\n                        trigger={\n                          <Image\n                            src={dish.image}\n                            floated=\"right\"\n                            rounded\n                            style={{ width: \"60px\" }}\n                          />\n                        }\n                        hideOnScroll\n                        flowing\n                      >\n                        <Image src={dish.image} size=\"medium\" rounded />\n                      </Popup>\n                    )}\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\"\n              }}\n            >\n              {\" \"}\n              <Item.Group\n                style={{\n                  background: \"white\",\n                  padding: \"5%\",\n                  boxShadow: \"5px 5px 5px 5px black\",\n                  width: \"60%\"\n                }}\n                divided\n              >\n                {getSweetAndSour().map(dish => {\n                  return (\n                    <Item key={dish.name}>\n                      <Card.Content>\n                        <Header\n                          as=\"h3\"\n                          floated=\"right\"\n                          color=\"green\"\n                          style={{ fontWeight: \"400\" }}\n                        >\n                          {dish.price}\n                        </Header>\n                        <Item.Header>\n                          <Header as=\"h4\">{dish.name}</Header>\n                        </Item.Header>\n                        {dish.description && (\n                          <Item.Meta>{dish.description}</Item.Meta>\n                        )}\n                      </Card.Content>\n                    </Item>\n                  );\n                })}\n              </Item.Group>\n              <div style={{ width: \"30%\" }}>\n                {getSweetAndSour().map(dish => {\n                  if (dish.image) {\n                    return (\n                      <Image\n                        src={dish.image}\n                        size=\"large\"\n                        rounded\n                        style={{\n                          margin: \"50px\",\n                          borderRadius: \"25px\"\n                        }}\n                        label={{\n                          color: \"brown\",\n                          content: dish.name,\n                          icon: \"food\",\n                          ribbon: \"right\",\n                          size: \"large\"\n                        }}\n                      />\n                    );\n                  }\n                })}\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default SweetAndSourComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menu-context\";\n\nconst EggFooYoungComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getEggFooYoung = () => {\n    if (menu.dishes) {\n      let EggFooYoung = menu.dishes.eggFooYoung;\n      return Object.values(EggFooYoung);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getEggFooYoung().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\"\n              }}\n              divided\n            >\n              {getEggFooYoung().map(dish => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default EggFooYoungComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Image, Item } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menu-context\";\n\nconst VegtablesAndAlmondsComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getVegtablesAndAlmonds = () => {\n    if (menu.dishes) {\n      let VegtablesAndAlmonds = menu.dishes.vA;\n      return Object.values(VegtablesAndAlmonds);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getVegtablesAndAlmonds().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\"\n              }}\n              divided\n            >\n              {getVegtablesAndAlmonds().map(dish => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default VegtablesAndAlmondsComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Image, Item, Popup } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menu-context\";\n\nconst ChowMeinComponentComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getChowMeinComponent = () => {\n    if (menu.dishes) {\n      let ChowMeinComponent = menu.dishes.chowMein;\n      return Object.values(ChowMeinComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getChowMeinComponent().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    {dish.image && (\n                      <Popup\n                        trigger={\n                          <Image\n                            src={dish.image}\n                            floated=\"right\"\n                            rounded\n                            style={{ width: \"60px\" }}\n                          />\n                        }\n                        hideOnScroll\n                        flowing\n                      >\n                        <Image src={dish.image} size=\"medium\" rounded />\n                      </Popup>\n                    )}\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\"\n              }}\n            >\n              <Item.Group\n                style={{\n                  background: \"white\",\n                  padding: \"5%\",\n                  boxShadow: \"5px 5px 5px 5px black\",\n                  width: \"60%\"\n                }}\n                divided\n              >\n                {getChowMeinComponent().map(dish => {\n                  return (\n                    <Item key={dish.name}>\n                      <Card.Content>\n                        <Header\n                          as=\"h3\"\n                          floated=\"right\"\n                          color=\"green\"\n                          style={{ fontWeight: \"400\" }}\n                        >\n                          {dish.price}\n                        </Header>\n                        <Item.Header>\n                          <Header as=\"h4\">{dish.name}</Header>\n                        </Item.Header>\n                        {dish.description && (\n                          <Item.Meta>{dish.description}</Item.Meta>\n                        )}\n                      </Card.Content>\n                    </Item>\n                  );\n                })}\n              </Item.Group>\n              <div style={{ width: \"30%\" }}>\n                {getChowMeinComponent().map(dish => {\n                  if (dish.image) {\n                    return (\n                      <Image\n                        src={dish.image}\n                        size=\"large\"\n                        rounded\n                        style={{\n                          margin: \"50px\",\n                          borderRadius: \"25px\"\n                        }}\n                        label={{\n                          color: \"brown\",\n                          content: dish.name,\n                          icon: \"food\",\n                          ribbon: \"right\",\n                          size: \"large\"\n                        }}\n                      />\n                    );\n                  }\n                })}\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default ChowMeinComponentComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport {\n  Card,\n  Header,\n  Image,\n  Popup,\n  Item,\n  Segment,\n} from \"semantic-ui-react\";\nimport { MenuContext } from \"../../../context/menu-context\";\nimport Media from \"react-media\";\nconst CantoneseComponentComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getCantoneseComponent = () => {\n    if (menu.dishes) {\n      let CantoneseComponent = menu.dishes.cantonese;\n      return Object.values(CantoneseComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getCantoneseComponent().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    {dish.image && (\n                      <Popup\n                        trigger={\n                          <Image\n                            src={dish.image}\n                            floated=\"right\"\n                            rounded\n                            style={{ width: \"60px\" }}\n                          />\n                        }\n                        hideOnScroll\n                        flowing\n                      >\n                        <Image src={dish.image} size=\"medium\" rounded />\n                      </Popup>\n                    )}\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        textAlign=\"center\"\n                        color=\"green\"\n                        style={{\n                          fontWeight: \"400\"\n                        }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header\n                          as=\"h5\"\n                          color=\"grey\"\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\"\n                          }}\n                        >\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\"\n              }}\n            >\n              <Item.Group\n                style={{\n                  background: \"white\",\n                  padding: \"5%\",\n                  boxShadow: \"5px 5px 5px 5px black\",\n                  width: \"60%\"\n                }}\n                divided\n              >\n                {getCantoneseComponent().map(dish => {\n                  return (\n                    <Item key={dish.name}>\n                      <Card.Content>\n                        <Header\n                          as=\"h3\"\n                          floated=\"right\"\n                          color=\"green\"\n                          style={{ fontWeight: \"400\" }}\n                        >\n                          {dish.price}\n                        </Header>\n                        <Item.Header>\n                          <Header as=\"h4\">{dish.name}</Header>\n                        </Item.Header>\n                        {dish.description && (\n                          <Item.Meta>{dish.description}</Item.Meta>\n                        )}\n                      </Card.Content>\n                    </Item>\n                  );\n                })}\n              </Item.Group>\n              <div style={{ width: '30%' }}>\n                {getCantoneseComponent().map(dish => {\n                  if (dish.image) {\n                    return (\n                      <Image\n                        src={dish.image}\n                        size=\"large\"\n                        rounded\n                        style={{\n                          margin: \"50px\",\n                          borderRadius: \"25px\",\n                        }}\n                        label={{\n                          color: \"brown\",\n                          content: dish.name,\n                          icon: \"food\",\n                          ribbon: \"right\",\n                          size: \"large\"\n                        }}\n                      />\n                    );\n                  }\n                })}\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default CantoneseComponentComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Image, Item } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../../context/menu-context\";\n\nconst SoupsComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getSoupsComponent = () => {\n    if (menu.dishes) {\n      let SoupsComponent = menu.dishes.soups;\n      return Object.values(SoupsComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getSoupsComponent().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\"\n              }}\n              divided\n            >\n              {getSoupsComponent().map(dish => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default SoupsComponent;\n","import React, { Fragment, useContext } from \"react\";\nimport {\n  Card,\n  Header,\n  List,\n  Image,\n  Popup,\n  Item,\n  Segment\n} from \"semantic-ui-react\";\nimport { MenuContext } from \"../../context/menu-context\";\nimport Media from \"react-media\";\n\nconst CombinationsComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getCombinations = () => {\n    if (menu.combinations) {\n      let Combinations = menu.combinations;\n      return Object.values(Combinations);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getCombinations().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    {dish.image && (\n                      <Popup\n                        trigger={\n                          <Image\n                            src={dish.image}\n                            floated=\"right\"\n                            rounded\n                            style={{ width: \"60px\" }}\n                          />\n                        }\n                        hideOnScroll\n                        flowing\n                      >\n                        <Image src={dish.image} size=\"medium\" rounded />\n                      </Popup>\n                    )}\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header\n                          as=\"h5\"\n                          color=\"grey\"\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\"\n                          }}\n                        >\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\"\n              }}\n            >\n              <Item.Group\n                style={{\n                  background: \"white\",\n                  padding: \"5%\",\n                  boxShadow: \"5px 5px 5px 5px black\",\n                  width: \"80%\"\n                }}\n                divided\n              >\n                {getCombinations().map(dish => {\n                  return (\n                    <Item key={dish.name}>\n                      <Card.Content>\n                        <Header\n                          as=\"h3\"\n                          floated=\"right\"\n                          color=\"green\"\n                          style={{ fontWeight: \"400\" }}\n                        >\n                          {dish.price}\n                        </Header>\n                        <Item.Header>\n                          <Header as=\"h4\">{dish.name}</Header>\n                        </Item.Header>\n                        {dish.description && (\n                          <Item.Meta>{dish.description}</Item.Meta>\n                        )}\n                      </Card.Content>\n                    </Item>\n                  );\n                })}\n              </Item.Group>\n              <div style={{ width: '30%' }}>\n                {getCombinations().map(dish => {\n                  if (dish.image) {\n                    return (\n                      <Image\n                        src={dish.image}\n                        size=\"large\"\n                        rounded\n                        style={{\n                          margin: \"50px\",\n                          borderRadius: \"25px\",\n                        }}\n                        label={{\n                          color: \"brown\",\n                          content: dish.name,\n                          icon: \"food\",\n                          ribbon: \"right\",\n                          size: \"large\"\n                        }}\n                      />\n                    );\n                  }\n                })}\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default CombinationsComponent;\n","import React, { useState, Fragment, useContext } from \"react\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\nimport Media from 'react-media'\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst DinnersComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getDinners = () => {\n    if (menu.dinners) {\n      let Dinners = menu.dinners;\n      return Object.values(Dinners);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getDinners().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n\n          )}\n          {!matches.mobile && (\n            <Item.Group style={{ background: \"white\", padding: \"5%\", boxShadow: '5px 5px 5px 5px black' }} divided>\n              {getDinners().map(dish => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>\n                          {dish.description}\n                        </Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default DinnersComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment, Card, Header, Item, Image } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst CanadianComponent = () => {\n  const [menu, setMenu] = useContext(MenuContext);\n\n  const getCanadianComponent = () => {\n    if (menu.dishes) {\n      let CanadianComponent = menu.dishes.canadian;\n      return Object.values(CanadianComponent);\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n      {matches => (\n        <Fragment>\n          {matches.mobile && (\n            <Segment.Group>\n              {getCanadianComponent().map(dish => {\n                return (\n                  <Segment key={dish.name}>\n                    <Card.Content>\n                      <Header\n                        as=\"h4\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Card.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Card.Header>\n                      {dish.description && (\n                        <Header as=\"h5\" color=\"grey\">\n                          {dish.description}\n                        </Header>\n                      )}\n                    </Card.Content>\n                  </Segment>\n                );\n              })}\n            </Segment.Group>\n          )}\n          {!matches.mobile && (\n            <Item.Group\n              style={{\n                background: \"white\",\n                padding: \"5%\",\n                boxShadow: \"5px 5px 5px 5px black\"\n              }}\n              divided\n            >\n              {getCanadianComponent().map(dish => {\n                return (\n                  <Item key={dish.name}>\n                    {dish.image && <Image src={dish.image} size=\"small\" />}\n                    <Card.Content>\n                      <Header\n                        as=\"h3\"\n                        floated=\"right\"\n                        color=\"green\"\n                        style={{ fontWeight: \"400\" }}\n                      >\n                        {dish.price}\n                      </Header>\n                      <Item.Header>\n                        <Header as=\"h4\">{dish.name}</Header>\n                      </Item.Header>\n                      {dish.description && (\n                        <Item.Meta>{dish.description}</Item.Meta>\n                      )}\n                    </Card.Content>\n                  </Item>\n                );\n              })}\n            </Item.Group>\n          )}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default CanadianComponent;\n","import React, { useState } from \"react\";\nimport \"./MenuListComponent.css\";\nimport { Accordion, Icon, Header } from \"semantic-ui-react\";\n\nimport AppetizersComponent from \"./dishes/AppetizersComponent\";\nimport RiceComponent from \"./dishes/RiceComponent\";\nimport SweetAndSourComponent from \"./dishes/Sweet&SourComponent\";\nimport EggFooYoungComponent from \"./dishes/EggFooYoungComponent\";\nimport VegtablesAndAlmondsComponent from \"./dishes/VegetableAndAlmonds\";\nimport ChowMeinComponentComponent from \"./dishes/ChowMeinComponent\";\nimport CantoneseComponentComponent from \"./dishes/CantoneseComponent\";\nimport SoupsComponent from \"./dishes/SoupsComponent\";\nimport CombinationsComponent from \"./CombinationsComponent\";\nimport DinnersComponent from \"./FullCourseComponent\";\nimport CanadianComponent from \"./CanadianDishesComponent\";\n\nconst MenuListComponenet = () => {\n  const [activeIndex, setActiveIndex] = useState(-1);\n\n  const handleClick = (e, index) => {\n    if (index.index === activeIndex) {\n      setActiveIndex(-1);\n    } else {\n      setActiveIndex(index.index);\n    }\n  };\n\n  return (\n    <Accordion fluid styled className={\"accordian\"}>\n      <Accordion.Title\n        active={activeIndex === 0}\n        index={0}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Special Combination Plates\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 0}>\n        <CombinationsComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Full Course Dinner\n        {/* <Header sub as='h6' style={{width: '300px'}}>Any substitutions incur a minimum $2.00 charge **</Header> */}\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1}>\n        <h6 style={{ margin: 0, left: \"15px\", position: \"relative\" }}>\n          Minimum $2.00 charge for substitutions\n        </h6>\n        <DinnersComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 2}\n        index={2}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Appetizers\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 2}>\n        <AppetizersComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 3}\n        index={3}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Rice (One size only)\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 3}>\n        <RiceComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 4}\n        index={4}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Sweet And Sour\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 4}>\n        <SweetAndSourComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 5}\n        index={5}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Egg Foo Young (grilled)\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 5}>\n        <EggFooYoungComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 6}\n        as={Header}\n        index={6}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Vegetable and Almonds\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 6}>\n        <VegtablesAndAlmondsComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 7}\n        as={Header}\n        index={7}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Chow Mein/Chop Suey\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 7}>\n        <ChowMeinComponentComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 8}\n        as={Header}\n        index={8}\n        onClick={handleClick}\n        as={Header}\n      >\n        <Icon name=\"dropdown\" />\n        Cantonese Style\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 8}>\n        <CantoneseComponentComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 9}\n        as={Header}\n        index={9}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Soups\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 9}>\n        <SoupsComponent />\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 10}\n        as={Header}\n        index={10}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Canadian Dishes\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 10}>\n        <CanadianComponent />\n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nexport default MenuListComponenet;\n","import React from \"react\";\nimport { Button, Header, Icon, Modal, Menu } from \"semantic-ui-react\";\nimport MenuListComponenet from \"../../menu/MenuListComponent\";\n\nconst MenuStyle = {\n  top: \"5%\",\n  width: \"90%\",\n  height: \"80%\"\n};\n\nconst MenuComponent = () => (\n  <Modal\n    trigger={\n      <Menu.Item position=\"left\">\n        <div className='text-white text-lg'>Menu</div>\n      </Menu.Item>\n    }\n    closeIcon\n    style={MenuStyle}\n  >\n    <Modal.Content\n      style={{ maxHeight: \"calc(100vh - 10em)\", overflow: \"auto\" }}\n    >\n      <Header as=\"h2\">\n        Menu\n      </Header>\n      <MenuListComponenet />\n      <Header sub as='h6'>Prices are subject to change.**</Header>\n    </Modal.Content>\n  </Modal>\n);\n\nexport default MenuComponent;\n","import lodash from \"lodash\";\nimport React, { Component, } from \"react\";\nimport { Search, Grid } from \"semantic-ui-react\";\nimport { MenuContext } from \"../../context/menu-context\";\nimport './MenuSearchStyle.css'\n\nconst style = {\n  position: \"relative\"\n};\n\n\nconst initialState = { isLoading: false, results: [], value: \"\" };\n\nexport default class SearchExampleStandard extends Component {\n  state = initialState;\n  static contextType = MenuContext;\n\n  getAllDishes = menu => {\n    const allDishes = menu.dishes;\n    const allCombinations = menu.combinations;\n    const allDinners = menu.dinners;\n    const result = [];\n\n    Object.values(allDishes).forEach(value => {\n      Object.values(value).forEach(dish => {\n        const newDishObj = {\n          title: dish.name,\n          description: dish.description,\n          price: dish.price\n        };\n        result.push(newDishObj);\n      });\n    });\n    Object.values(allCombinations).forEach(dish => {\n      const newDishObj = {\n        title: dish.name,\n        description: dish.description,\n        price: dish.price\n      };\n      result.push(newDishObj);\n    });\n    Object.values(allDinners).forEach(dish => {\n      const newDishObj = {\n        title: dish.name,\n        description: dish.description,\n        price: dish.price\n      };\n      result.push(newDishObj);\n    });\n    return result;\n  };\n\n  handleResultSelect = (_, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (_, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) {\n        return this.setState(initialState);\n      }\n\n      const re = new RegExp(lodash.escapeRegExp(this.state.value), \"i\");\n      const isMatch = result => re.test(result.title);\n\n      this.setState({\n        isLoading: false,\n        results: lodash.filter(this.getAllDishes(this.context[0]), isMatch)\n      });\n    }, 300);\n  };\n  render() {\n    const { isLoading, value, results } = this.state;\n\n    return (\n      <Grid>\n        <Grid.Column width={4} style={style}>\n          <div>\n            <Search\n              aligned={\"left\"}\n              loading={isLoading}\n              // onResultSelect={this.handleResultSelect}\n              onSearchChange={lodash.debounce(this.handleSearchChange, 500, {\n                leading: true\n              })}\n              results={results}\n              value={value}\n              {...this.props}\n            ></Search>\n          </div>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { Responsive, Menu } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport MenuComponent from \"./MobileMenuComponent\";\nimport MenuSearchComponent from \"../MenuSearchComponent\";\n\nconst SmallMobileComponent = () => {\n  return (\n    <Responsive\n      as={Menu}\n      {...Responsive.onlyMobile}\n      style={{\n        background: \"#b82e26\",\n        padding: \"3%\",\n        fontSize: \".90rem\"\n      }}\n    >\n      <MenuComponent />\n      <MenuSearchComponent style={{ right: \"100%\", position: \"relative\" }} />\n    </Responsive>\n  );\n};\n\nconst RegularMobileComponent = () => {\n  return (\n    <Responsive\n      as={Menu}\n      {...Responsive.onlyMobile}\n      style={{\n        background: \"#b82e26\",\n        padding: \"3%\"\n      }}\n    >\n      <MenuComponent />\n      <MenuSearchComponent style={{ right: \"100%\", position: \"relative\" }} />\n    </Responsive>\n  );\n};\n\nconst MobileNavBarComponent = menu => {\n  return (\n    <Media\n      queries={{\n        small: \"(max-width: 320px)\"\n      }}\n    >\n      {matches => (\n        <Fragment>\n          {matches.small && <SmallMobileComponent />}\n          {!matches.small && <RegularMobileComponent />}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default MobileNavBarComponent;\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport MenuSearchComponent from \"../MenuSearchComponent\";\nimport Scroll from \"react-scroll\";\nimport { Link } from \"react-router-dom\";\n\nconst ScrollLink = Scroll.Link;\nconst DesktopNavbarComponent = () => {\n  const textStyle = \"text-sm sm:text-2xl hover:font-semibold text-white\";\n\n  return (\n    <div\n      style={{ background: \"#b82e26\" }}\n      className=\"flex text-white justify-around py-4\"\n    >\n      <Menu.Item className=\"flex flex-col justify-center\">\n        <Link to=\"/\">\n          <div className={`${textStyle}`}>HOME</div>\n        </Link>\n      </Menu.Item>\n\n      <Menu.Item name=\"Menu\" className=\"flex flex-col justify-center\">\n        <Link to=\"/menu\">\n          <div className={`${textStyle}`}>MENU</div>\n        </Link>\n      </Menu.Item>\n\n      <Menu.Item name=\"Menu\" className=\"flex flex-col justify-center\">\n        <ScrollLink to=\"visit_us\">\n          <Link to=\"/\">\n            <button className={`${textStyle}`}>VISIT US</button>\n          </Link>\n        </ScrollLink>\n      </Menu.Item>\n\n      <Menu.Item name=\"Menu\" className=\"flex flex-col justify-center\">\n        <Link to=\"/\">\n          <ScrollLink to=\"hours\">\n            <button className={`${textStyle}`}> HOURS</button>\n          </ScrollLink>\n        </Link>\n      </Menu.Item>\n\n      <Menu.Menu className=\"flex flex-col justify-center\">\n        <Menu.Item>\n          <MenuSearchComponent />\n        </Menu.Item>\n      </Menu.Menu>\n    </div>\n  );\n};\n\nexport default DesktopNavbarComponent;\n","import React, { useContext, Fragment } from \"react\";\nimport { Segment } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nimport MobileNavbarComponent from \"./mobile/MobileNavbarComponent\";\nimport DesktopNavbarComponent from \"./desktop/DesktopNavbarComponent\";\n\nimport { MenuContext } from \"../../context/menu-context\";\n\nconst NavbarComponent = () => {\n  const [menu] = useContext(MenuContext);\n\n  return (\n    <div>\n      <Segment.Group>\n        <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n          {(matches) => (\n            <Fragment>\n              {matches.mobile && (\n                <div>\n                  <MobileNavbarComponent menu={menu} />\n                </div>\n              )}\n              {!matches.mobile && (\n                <div>\n                  <DesktopNavbarComponent menu={menu} />\n                </div>\n              )}\n            </Fragment>\n          )}\n        </Media>\n      </Segment.Group>\n    </div>\n  );\n};\n\nexport default NavbarComponent;\n","import React from \"react\";\nimport Iframe from \"react-iframe\";\nimport { Element } from \"react-scroll\";\n\nconst MapComponent = () => {\n  return (\n    <Element name=\"visit_us\">\n      <div className=\"flex w-screen justify-center\">\n        <Iframe\n          url=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7025.307316203426!2d-77.14187548434793!3d44.00714172541031!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89d7ca541acadc9d%3A0xe6740b299f5e525e!2s155%20Picton%20Main%20St%2C%20Prince%20Edward%2C%20ON!5e0!3m2!1sen!2sca!4v1581291195493!5m2!1sen!2sca\"\n          width=\"100%\"\n          height=\"450px\"\n          id=\"myId\"\n        />\n      </div>\n    </Element>\n  );\n};\n\nexport default MapComponent;\n","import React, { useState } from \"react\";\nimport { Sidebar, Accordion, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst SidebarComponent = ({setDefaultFalse}) => {\n  const [activeIndex, setActiveIndeex] = useState(0);\n\n  const handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n    setActiveIndeex(newIndex);\n  };\n\n  return (\n    <Sidebar\n      as={Accordion}\n      animation=\"push\"\n      icon=\"labeled\"\n      vertical\n      visible={true}\n      styled\n      style={{background: '#f0f0f0'}}\n    >\n      <Link to=\"/menu/combinations\">\n        <Accordion.Title onClick={setDefaultFalse}>\n          <Icon />\n          Special Combination Plates\n        </Accordion.Title>\n      </Link>\n\n      <Link to=\"/menu/fullcourse\">\n        <Accordion.Title onClick={setDefaultFalse}>\n          <Icon />\n          Full Course Dinners\n        </Accordion.Title>\n      </Link>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Main Dishes\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1} styled={false}>\n        <Accordion style={{ boxShadow: \"none\", background: '#f0f0f0' }}>\n          <Link to=\"/menu/soups\">\n            <Accordion.Title onClick={setDefaultFalse}>Soups</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/appetizers\">\n            <Accordion.Title onClick={setDefaultFalse}>Appetizers</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/rice\">\n            <Accordion.Title onClick={setDefaultFalse}>Rice (One size)</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/eggFooYoung\">\n            <Accordion.Title onClick={setDefaultFalse}>Egg Foo Young (Grilled)</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/chowMein\">\n            <Accordion.Title onClick={setDefaultFalse}>Chow Mein (Dry noodles)/Chop Suey</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/sweetAndSour\">\n            <Accordion.Title onClick={setDefaultFalse}>Sweet and Sour</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/vegtablesAndAlmonds\">\n            <Accordion.Title onClick={setDefaultFalse}>Vegetables and Almonds</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/cantonese\">\n            <Accordion.Title onClick={setDefaultFalse}>Cantonese Style</Accordion.Title>\n          </Link>\n          <Link to=\"/menu/canadian\">\n            <Accordion.Title onClick={setDefaultFalse}>Canadian Dishes</Accordion.Title>\n          </Link>\n        </Accordion>\n      </Accordion.Content>\n    </Sidebar>\n  );\n};\n\nexport default SidebarComponent;\n","import React, { useState } from \"react\";\nimport { Sidebar, Segment, div, Item } from \"semantic-ui-react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CombinationsComponent from \"../../menu/CombinationsComponent\";\nimport FullcourseComponenet from \"../../menu/FullCourseComponent\";\nimport SoupComponent from \"../../menu/dishes/SoupsComponent\";\nimport AppetizersComponent from \"../../menu/dishes/AppetizersComponent\";\nimport RiceComponent from \"../../menu/dishes/RiceComponent\";\nimport EggFooYoungComponent from \"../../menu/dishes/EggFooYoungComponent\";\nimport ChowMeinComponent from \"../../menu/dishes/ChowMeinComponent\";\nimport SweetAndSourComponent from \"../../menu/dishes/Sweet&SourComponent\";\nimport VegetablesAndAlmondsComponent from \"../../menu/dishes/VegetableAndAlmonds\";\nimport CantoneseComponent from \"../../menu/dishes/CantoneseComponent\";\nimport CanadianComponent from \"../../menu/CanadianDishesComponent\";\nconst menuRouteStyle = {\n  menuItemStyle: {\n    paddingLeft: \"50px\",\n    paddingRight: \"300px\",\n    paddingTop: \"50px\",\n    paddingBottom: \"50px\",\n    height: \"450px\"\n  }\n};\n\nconst DesktopMenuRoutesComponent = () => {\n  const { menuItemStyle } = menuRouteStyle;\n\n  return (\n    <Sidebar.Pusher style={{ padding: \" 2% 5%\", overflow: \"auto\" }} className='text-white'>\n      <Switch>\n        <Route exact path=\"/menu\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Special Combinations Plates</div>\n            <Item.Meta>\n              No substitutions within combinations plates. Get $1 off betwean\n              11:30am-2pm\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CombinationsComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/combinations\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Special Combinations Plates</div>\n            <Item.Meta>\n              No substitutions within combinations plates. Get $1 off betwean\n              11:30am-2pm\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CombinationsComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/fullcourse\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Full Course Meals</div>\n            <Item.Meta>\n              Appetizers cannot be substituted. Other substitutions require\n              minimum $2.00 charge**.\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <FullcourseComponenet />\n          </div>\n        </Route>\n        <Route path=\"/menu/soups\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Soups</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <SoupComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/appetizers\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Appetizers</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <AppetizersComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/rice\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Rice (One size only)</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <RiceComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/eggFooYoung\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Egg Foo Young (Grilled)</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <EggFooYoungComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/chowMein\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Chow Mein (Dry noodles)/Chop Suey</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <ChowMeinComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/sweetAndSour\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Sweet and Sour</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <SweetAndSourComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/vegtablesAndAlmonds\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Vegetables and Almonds</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <VegetablesAndAlmondsComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/cantonese\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Cantonese Style</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CantoneseComponent />\n          </div>\n        </Route>\n        <Route path=\"/menu/canadian\">\n          <Segment basic>\n            <div className='text-4xl py-8'>Canadian Dishes</div>\n            <Item.Meta>\n              <div>Prices are subject to change.**</div>\n            </Item.Meta>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CanadianComponent />\n          </div>\n        </Route>\n      </Switch>\n    </Sidebar.Pusher>\n  );\n};\n\nexport default DesktopMenuRoutesComponent;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport { Sidebar, Header, Segment } from \"semantic-ui-react\";\nimport SideBarComponent from \"../desktop/menu/SidebarComponent\";\nimport CombinationsComponent from \"../menu/CombinationsComponent\";\n\nimport DesktopMenuRouteComponent from \"./menu/DesktopMenuRoutesComponent\";\n\nconst DesktopMenuComponentStyle = {\n  sidebarContainerStyle: {\n    height: \"700px\",\n    backgroundImage: `linear-gradient(\n      rgba(0, 0, 0, 0.5),\n      rgba(0, 0, 0, 0.5)\n    ),url(\"https://scontent-ort2-2.xx.fbcdn.net/v/t1.15752-9/90638527_2542059202721532_3598802648356093952_n.png?_nc_cat=106&_nc_sid=b96e70&_nc_ohc=c5iOBlIIPsUAX_z4-zw&_nc_ht=scontent-ort2-2.xx&oh=73412c67136a40e2e6151d3719d87da2&oe=5EA3FC74\")`\n  },\n  sidebarStyle: { padding: \" 1.4em\" },\n  menuItemStyle: {\n    paddingLeft: \"50px\",\n    paddingRight: \"300px\",\n    paddingTop: \"50px\",\n    paddingBottom: \"50px\",\n    height: \"450px\",\n    width: \"1700px\"\n  }\n};\n\nconst DesktopMenuComponent = () => {\n  const { sidebarContainerStyle, menuItemStyle } = DesktopMenuComponentStyle;\n\n  const [isDefault, setIsDefault] = useState(true);\n\n  const setDefaultFalse = () => {\n    console.log(\"TURNING OFF DEFAULT\");\n    setIsDefault(false);\n  };\n\n  const getDefault = () => {\n    if (isDefault) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: \"10\",\n            left: \"20%\",\n            // overflow: \"auto\",\n            height: \"500px\",\n            top: \"8%\"\n          }}\n        >\n          <Segment basic>\n            <Header as=\"h3\">Special Combinations Plates</Header>\n          </Segment>\n          <div style={menuItemStyle}>\n            <CombinationsComponent />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Router>\n      <Sidebar.Pushable style={sidebarContainerStyle}>\n        <SideBarComponent setDefaultFalse={setDefaultFalse} />\n        <DesktopMenuRouteComponent />\n      </Sidebar.Pushable>\n    </Router>\n  );\n};\n\nexport default DesktopMenuComponent;\n","import React, { Fragment } from \"react\";\nimport { Modal, Header } from \"semantic-ui-react\";\nimport MenuListComponenet from \"./menu/MenuListComponent\";\nimport Media from \"react-media\";\nimport { Link } from 'react-router-dom'\n\nconst DesktopLandingV2 = (prop) => {\n  const MenuStyle = {\n    top: \"5%\",\n    width: \"90%\",\n    height: \"80%\",\n  };\n\n  return (\n    <div\n      style={{ height: \"600px\" }}\n      className=\"flex flex-col justify-center text-white\"\n    >\n      <div className=\"flex justify-center p-8\">\n        <div\n          style={{ backgroundColor: \"#b82e26\" }}\n          className=\"px-8 py-24 rounded-full text-4xl opacity-75\"\n        >\n          <div className=\"flex justify-center text-white opacity-100\">GOLDEN INN</div>\n          <div className=\"flex justify-center pt-2 opacity-100\">RESTAURANT</div>\n        </div>\n      </div>\n      <div className=\"flex justify-center text-lg text-center p-4\">\n        SERVING AUTHENTIC CANTONESE STYLE CHINESE FOOD FOR 28 YEARS\n      </div>\n      <div className=\"flex justify-center text-black p-2\">\n        <div className=\"bg-white opacity-75 hover:opacity-100 p-4 px-12 ml-2\">\n          <Media queries={{ mobile: \"(max-width: 467px)\" }}>\n            {(matches) => (\n              <Fragment>\n                {matches.mobile && (\n                  <div>\n                    <Modal\n                      trigger={<div className=\"text-black text-lg\">Menu</div>}\n                      closeIcon\n                      style={MenuStyle}\n                    >\n                      <Modal.Content\n                        style={{\n                          maxHeight: \"calc(100vh - 10em)\",\n                          overflow: \"auto\",\n                        }}\n                      >\n                        <Header as=\"h2\">Menu</Header>\n                        <MenuListComponenet />\n                        <Header sub as=\"h6\">\n                          Prices are subject to change.**\n                        </Header>\n                      </Modal.Content>\n                    </Modal>\n                  </div>\n                )}\n                {!matches.mobile && <Link to=\"/menu\" className='font-semibold hover:text-black'>Menu</Link>}\n              </Fragment>\n            )}\n          </Media>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DesktopLandingV2;\n","import React, { useEffect, useState } from \"react\";\nimport { Element } from \"react-scroll\";\nimport { db } from '../context/menu-context';\n\nconst VisitUs = () => {\n\n  const [daysOfTheWeek, setDaysOfTheWeek] = useState([]);\n\n  useEffect(() => {\n\n    db.collection(\"messages\")\n      .doc(\"frontPageMessages\")\n      .get()\n      .then((querySnapshot) => {\n        const { hoursOfOperation } = querySnapshot.data();\n\n        setDaysOfTheWeek(hoursOfOperation);\n      });\n\n\n  }, [])\n\n  return (\n    <div\n      style={{ height: \"600px\" }}\n      className=\"flex flex-col w-screen justify-evenly text-white\"\n    >\n      <Element name=\"hours\">\n        <div className=\"flex justify-center text-5xl\">VISIT US</div>\n      </Element>\n      <div className=\"flex justify-center text-xl text-center p-4\">\n        155 Main Street West, Picton, Prince Edward, ON, Canada\n      </div>\n      <div className=\"flex justify-center text-xl\">613-476-7056</div>\n      <div className=\"flex justify-center\">\n        <a href=\"tel:6134767056\">\n          <div className=\"rounded-full p-4 shadow bg-red-700 opacity-75 hover:opacity-100 font-semibold hover:text-white\">\n            CALL TO PLACE YOUR ORDER\n          </div>\n        </a>\n      </div>\n      <div id=\"/visit_us\" className=\"flex justify-center text-2xl\">\n        Hours of Operation\n      </div>\n\n      <div className=\"flex justify-center  text-xl\">\n        <div className=\"flex flex-col justify-center\">\n          {daysOfTheWeek.map((item) => (\n            <div className=\"flex justify-end p-2\">\n              <div>{item.day}</div>\n            </div>\n          ))}\n        </div>\n        <div className=\"w-12\" />\n        <div className=\"flex flex-col justify-center\">\n          {daysOfTheWeek.map((item) => (\n            <div className=\"flex justify-center p-2\">\n              <div>{item.hours}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VisitUs;\n","export const AppStyle = {\n    backgroundColor: {\n      backgroundImage: `linear-gradient(\n      rgba(0, 0, 0, 0.5),\n      rgba(0, 0, 0, 0.5)\n    ),url(\"https://firebasestorage.googleapis.com/v0/b/the-golden-inn-restaurant.appspot.com/o/goldenInnBackground.png?alt=media&token=c031b198-7ddc-4881-94e9-b61866bc15ca\")`,\n    },\n};\n  ","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ReactGA from \"react-ga\";\nimport { Message } from \"semantic-ui-react\";\n\nimport NavBarComponent from \"./components/Navbar/NavbarComponent\";\nimport MapComponent from \"./components/MapComponent\";\nimport DesktopMenuComponent from \"./components/desktop/DesktopMenuComponent\";\nimport DesktopLanding from \"./components/Landing\";\nimport DesktopVisitUs from \"./components/VisitUs\";\nimport { MenuItemContextProvider, db } from \"./context/menu-context\";\nimport { AppStyle } from './constants';\n\nexport default function App() {\n  const [banner, setBanner] = useState({\n    visible: false,\n    title: \"\",\n    message: \"\",\n  });\n\n  useEffect(() => {\n    db.collection(\"messages\")\n      .doc(\"bannerMessage\")\n      .get()\n      .then((querySnapshot) => {\n        const { message, title, visible } = querySnapshot.data();\n\n        setBanner({\n          message,\n          title,\n          visible,\n        });\n      });\n  }, []);\n\n  return (\n    <Router style={AppStyle.backgroundColor}>\n      <div style={AppStyle.backgroundColor} className=\"font-advent\">\n        <MenuItemContextProvider>\n          <NavBarComponent />\n          {banner.visible && (\n            <Message warning style={{ textAlign: \"center\", margin: \"0\" }}>\n              <Message.Header>{banner.title}</Message.Header>\n              <p className=\"font-sans\">{banner.message}</p>\n            </Message>\n          )}\n          <Switch>\n            <Route exact path=\"/\">\n              <HomepageComponent />\n            </Route>\n\n            <Route path=\"/menu\">\n              <DesktopMenuComponent />\n            </Route>\n          </Switch>\n        </MenuItemContextProvider>\n        <a href=\"https://www.flaticon.com/free-icons/wok\" title=\"wok icons\">\n          Wok icons created by Freepik - Flaticon\n        </a>\n      </div>\n    </Router>\n  );\n}\n\nfunction initializeReactGA() {\n  ReactGA.initialize(\"UA-160054958-1\");\n  ReactGA.pageview(\"/\");\n}\n\nfunction HomepageComponent() {\n  const { backgroundColor } = AppStyle;\n  initializeReactGA();\n  return (\n    <div style={backgroundColor}>\n      <DesktopLanding />\n      <DesktopVisitUs />\n      <MapComponent />\n    </div>\n  );\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/tailwind.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}