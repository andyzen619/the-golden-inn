{"version":3,"sources":["components/LandingComponent.js","components/VisitUsComponent.js","components/menu/DishesComponent.js","components/menu/MenuListComponent.js","components/Navbar/MenuComponent.js","components/Navbar/MenuSearchComponent.js","components/Navbar/NavbarComponent.js","App.js","serviceWorker.js","index.js"],"names":["LandingComponent","Image","src","className","Header","size","style","color","VisitUsComponent","Table","basic","celled","collapsing","Body","day","hours","map","index","Row","Cell","source","_","times","title","faker","company","companyName","description","catchPhrase","image","internet","avatar","price","finance","amount","DishesComponenet","useEffect","console","log","Segment","Group","item","Container","as","floated","Card","Description","MenuListComponenet","useState","activeIndex","setActiveIndex","handleClick","e","Accordion","fluid","styled","Title","active","onClick","Icon","name","Content","DishesComponent","MenuStyle","height","MenuComponent","Modal","trigger","Menu","Item","position","closeIcon","content","Actions","initialState","isLoading","results","value","SearchExampleStandard","state","handleResultSelect","result","setState","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","filter","test","this","Grid","Column","width","right","Search","loading","onSearchChange","debounce","leading","props","Component","NavbarComponent","queries","small","matches","Responsive","onlyMobile","background","padding","fontSize","onlyTablet","onlyComputer","onlyLargeScreen","onlyWidescreen","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+MAmBeA,EAdU,WACvB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,2DAA2DC,UAAU,UAChF,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CAAQC,KAAK,OAAOC,MAAO,CAACC,MAAO,UAAnC,6BACA,kBAACH,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAO,CAACC,MAAO,UAApC,uD,UCkCOC,G,OAxCU,WAWvB,OACE,yBAAKL,UAAU,mBACb,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,MAAO,CAAEC,MAAO,UAArC,YAGA,kBAACH,EAAA,EAAD,CAAQC,KAAK,OAAOC,MAAO,CAAEC,MAAO,SAApC,2DAGA,kBAACH,EAAA,EAAD,CAAQC,KAAK,UAAb,sBACA,kBAACI,EAAA,EAAD,CAAOC,MAAM,OAAOC,QAAM,EAACC,YAAU,EAACT,UAAU,0BAC9C,kBAACM,EAAA,EAAMI,KAAP,CAAYV,UAAU,mCApBN,CACpB,CAAEW,IAAK,MAAOC,MAAO,UACrB,CAAED,IAAK,MAAOC,MAAO,gCACrB,CAAED,IAAK,MAAOC,MAAO,gCACrB,CAAED,IAAK,QAASC,MAAO,gCACvB,CAAED,IAAK,MAAOC,MAAO,gCACrB,CAAED,IAAK,MAAOC,MAAO,gCACrB,CAAED,IAAK,MAAOC,MAAO,iCAcAC,KAAI,SAACF,EAAKG,GACvB,OACE,kBAACR,EAAA,EAAMS,IAAP,KACE,kBAACT,EAAA,EAAMU,KAAP,KACE,yBAAKhB,UAAU,6BACb,8BAAOW,EAAIA,KACX,8BAAOA,EAAIC,kB,+GC3BzBK,EAASC,IAAEC,MAAM,GAAG,iBAAO,CAC/BC,MAAOC,IAAMC,QAAQC,cACrBC,YAAaH,IAAMC,QAAQG,cAC3BC,MAAOL,IAAMM,SAASC,SACtBC,MAAOR,IAAMS,QAAQC,OAAO,EAAG,IAAK,EAAG,SA+B1BC,EA5BU,WAKvB,OAJAC,qBAAU,WACRC,QAAQC,IAAIlB,KACX,IAGD,6BACE,kBAACmB,EAAA,EAAQC,MAAT,KACGpB,EAAOJ,KAAI,SAAAyB,GACV,OACE,kBAACF,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACtC,EAAA,EAAD,CAAQuC,GAAG,KAAKC,QAAQ,QAAQrC,MAAM,SAAtC,SAGA,6BACE,kBAACH,EAAA,EAAD,CAAQuC,GAAG,MAAX,gCACA,kBAACE,EAAA,EAAKC,YAAN,yBCkDHC,GAxEA1B,IAAEC,MAAM,GAAG,iBAAO,CAC/BC,MAAOC,IAAMC,QAAQC,cACrBC,YAAaH,IAAMC,QAAQG,cAC3BC,MAAOL,IAAMM,SAASC,SACtBC,MAAOR,IAAMS,QAAQC,OAAO,EAAG,IAAK,EAAG,SAGd,WAAO,IAAD,EACOc,mBAAS,GADhB,mBACxBC,EADwB,KACXC,EADW,KAGzBC,EAAc,SAACC,EAAGnC,GACtBoB,QAAQC,IAAIrB,GACRA,EAAMA,QAAUgC,EAClBC,GAAgB,GAEhBA,EAAejC,EAAMA,QAIzB,OACE,kBAACoC,EAAA,EAAD,CAAWC,OAAK,EAACC,QAAM,GACrB,kBAACF,EAAA,EAAUG,MAAX,CACEC,OAAwB,IAAhBR,EACRhC,MAAO,EACPyC,QAASP,GAET,kBAACQ,EAAA,EAAD,CAAMC,KAAK,aALb,UAQA,kBAACP,EAAA,EAAUQ,QAAX,CAAmBJ,OAAwB,IAAhBR,GACvB,kBAACa,EAAD,OAGJ,kBAACT,EAAA,EAAUG,MAAX,CACEC,OAAwB,IAAhBR,EACRhC,MAAO,EACPyC,QAASP,GAET,kBAACQ,EAAA,EAAD,CAAMC,KAAK,aALb,sBAQA,kBAACP,EAAA,EAAUQ,QAAX,CAAmBJ,OAAwB,IAAhBR,IAI3B,kBAACI,EAAA,EAAUG,MAAX,CACEC,OAAwB,IAAhBR,EACRhC,MAAO,EACPyC,QAASP,GAET,kBAACQ,EAAA,EAAD,CAAMC,KAAK,aALb,sBAQA,kBAACP,EAAA,EAAUQ,QAAX,CAAmBJ,OAAwB,IAAhBR,IAI3B,kBAACI,EAAA,EAAUG,MAAX,CACEC,OAAwB,IAAhBR,EACRhC,MAAO,EACPyC,QAASP,GAET,kBAACQ,EAAA,EAAD,CAAMC,KAAK,aALb,mBAQA,kBAACP,EAAA,EAAUQ,QAAX,CAAmBJ,OAAwB,IAAhBR,OCrE3Bc,EAAY,CAChBC,OAAQ,WAoBKC,EAjBO,kBACpB,kBAACC,EAAA,EAAD,CAAOC,QAAS,kBAACC,EAAA,EAAKC,KAAN,CAAWC,SAAS,QAApB,QAA6CC,WAAS,EAACjE,MAAOyD,GAC5E,kBAACG,EAAA,EAAML,QAAP,KACE,kBAACzD,EAAA,EAAD,CAAQoE,QAAQ,SAChB,kBAAC,EAAD,OAEF,kBAACN,EAAA,EAAMO,QAAP,Q,4DCTErD,EAASC,IAAEC,MAAM,GAAG,iBAAO,CAC/BC,MAAOC,IAAMC,QAAQC,cACrBC,YAAaH,IAAMC,QAAQG,cAE3BI,MAAOR,IAAMS,QAAQC,OAAO,EAAG,IAAK,EAAG,SAGnCwC,EAAe,CAAEC,WAAW,EAAOC,QAAS,GAAIC,MAAO,IAExCC,E,2MACnBC,MAAQL,E,EAERM,mBAAqB,SAAC5B,EAAD,OAAM6B,EAAN,EAAMA,OAAN,OACnB,EAAKC,SAAS,CAAEL,MAAOI,EAAO1D,S,EAEhC4D,mBAAqB,SAAC/B,EAAD,GAAmB,IAAbyB,EAAY,EAAZA,MACzB,EAAKK,SAAS,CAAEP,WAAW,EAAME,UAEjCO,YAAW,WACT,GAAI,EAAKL,MAAMF,MAAMQ,OAAS,EAAG,OAAO,EAAKH,SAASR,GAEtD,IAAMY,EAAK,IAAIC,OAAOlE,IAAEmE,aAAa,EAAKT,MAAMF,OAAQ,KAGxD,EAAKK,SAAS,CACZP,WAAW,EACXC,QAASvD,IAAEoE,OAAOrE,GAJJ,SAAA6D,GAAM,OAAIK,EAAGI,KAAKT,EAAO1D,cAMxC,M,wEAGK,IAAD,EAC+BoE,KAAKZ,MAAnCJ,EADD,EACCA,UAAWE,EADZ,EACYA,MAAOD,EADnB,EACmBA,QAE1B,OACE,kBAACgB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAAGxF,MAAO,CAACgE,SAAU,WAAYyB,MAAO,OAC1D,kBAACC,EAAA,EAAD,eACEC,QAAStB,EAETuB,eAAgB7E,IAAE8E,SAASR,KAAKR,mBAAoB,IAAK,CACvDiB,SAAS,IAEXxB,QAASA,EACTC,MAAOA,GACHc,KAAKU,c,GApC8BC,a,mBCsDpCC,EA5DS,WACtB,OACE,6BACE,kBAAChE,EAAA,EAAQC,MAAT,KACE,kBAAC,IAAD,CACEgE,QAAS,CACPC,MAAO,wBAKR,SAAAC,GAAO,OACN,kBAAC,WAAD,KACGA,EAAQD,OACP,kBAACE,EAAA,EAAD,eACEhE,GAAIyB,KACAuC,IAAWC,WAFjB,CAGEtG,MAAO,CACLuG,WAAY,UACZC,QAAS,KACTC,SAAU,YAGZ,kBAAC,EAAD,MACA,kBAAC,EAAD,QAGFL,EAAQD,OACR,kBAACE,EAAA,EAAD,eACEhE,GAAIyB,KACAuC,IAAWC,WAFjB,CAGEtG,MAAO,CACLuG,WAAY,UACZC,QAAS,QAGX,kBAAC,EAAD,MACA,kBAAC,EAAD,WAMV,kBAACH,EAAA,EAAD,eAAYhE,GAAIJ,KAAaoE,IAAWK,YAAxC,UAGA,kBAACL,EAAA,EAAD,eAAYhE,GAAIJ,KAAaoE,IAAWM,cAAxC,YAGA,kBAACN,EAAA,EAAD,eAAYhE,GAAIJ,KAAaoE,IAAWO,iBAAxC,gBAGA,kBAACP,EAAA,EAAD,eAAYhE,GAAIJ,KAAaoE,IAAWQ,gBAAxC,iBCzCOC,MAVf,WACE,OACE,yBAAK9G,MAAO,CAACuG,WAAY,YACvB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.fc05abe8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./LandingComponent.css\";\n\nimport { Image, Header } from \"semantic-ui-react\";\n\nconst LandingComponent = () => {\n  return (\n    <div>\n      <Image src=\"https://img1.wsimg.com/isteam/stock/107160/:/rs=h:1028,m\" className=\"image\"/>\n      <div className=\"divStyle\">\n        <Header size=\"huge\" style={{color: 'white'}}>WELCOME TO THE GOLDEN INN</Header>\n        <Header size=\"small\" style={{color: 'white'}}>\n          Serving authentic Chinese food for over 25 years\n        </Header>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingComponent;\n","import React from \"react\";\n\nimport { Header, Table, Image } from \"semantic-ui-react\";\nimport \"./VisitUsComponent.css\";\n\nconst VisitUsComponent = () => {\n  const daysOfTheWeek = [\n    { day: \"Mon\", hours: \"Closed\" },\n    { day: \"Tue\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Wed\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Thurs\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Fri\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Sat\", hours: \"11:30 a.m. – 09:00 p.m.\" },\n    { day: \"Sun\", hours: \"11:30 a.m. – 09:00 p.m.\" }\n  ];\n\n  return (\n    <div className=\"visitUsDivStyle\">\n      <Header size=\"large\" style={{ color: \"black\" }}>\n        VISIT US\n      </Header>\n      <Header size=\"tiny\" style={{ color: \"grey\" }}>\n        155 Main Street West, Picton, Prince Edward, ON, Canada\n      </Header>\n      <Header size=\"medium\">Hours of operation</Header>\n      <Table basic=\"very\" celled collapsing className='hoursOfOperationsStyle'>\n        <Table.Body className='hoursOfOperationsTableBodyStyle'>\n          {daysOfTheWeek.map((day, index) => {\n            return (\n              <Table.Row>\n                <Table.Cell>\n                  <div className='hoursOfOperationCellStyle'>\n                    <span>{day.day}</span>\n                    <span>{day.hours}</span>\n                  </div>\n                </Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\nexport default VisitUsComponent;\n","import React, { useState, useEffect } from \"react\";\nimport { Segment, Card, Header, Container } from \"semantic-ui-react\";\n\nimport faker from \"faker\";\nimport _ from \"lodash\";\n\nconst source = _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, \"$\")\n}));\n\nconst DishesComponenet = () => {\n  useEffect(() => {\n    console.log(source);\n  }, []);\n\n  return (\n    <div>\n      <Segment.Group >\n        {source.map(item => {\n          return (\n            <Segment >\n              <Container >\n                <Header as=\"h5\" floated=\"right\" color=\"green\">\n                  $9.99\n                </Header>\n                <div>\n                  <Header as=\"h4\">Sweet and Sour Chicken Balls</Header>\n                  <Card.Description>Amazing</Card.Description>\n                </div>\n              </Container>\n            </Segment>\n          );\n        })}\n      </Segment.Group>\n    </div>\n  );\n};\n\nexport default DishesComponenet;\n","import React, { useState, useEffect } from \"react\";\nimport {Accordion, Icon} from 'semantic-ui-react';\n\nimport faker from \"faker\";\nimport _ from \"lodash\";\n\nimport DishesComponent from \"./DishesComponent\";\n\nconst source = _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, \"$\")\n}));\n\nconst MenuListComponenet = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const handleClick = (e, index) => {\n    console.log(index);\n    if (index.index === activeIndex) {\n      setActiveIndex(-1);\n    } else {\n      setActiveIndex(index.index);\n    }\n  };\n\n  return (\n    <Accordion fluid styled>\n      <Accordion.Title\n        active={activeIndex === 0}\n        index={0}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Dishes\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 0}>\n          <DishesComponent/>\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 1}\n        index={1}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Combination Plates\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 1}>\n        \n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 2}\n        index={2}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Full Course Dinner\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 2}>\n        \n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeIndex === 3}\n        index={3}\n        onClick={handleClick}\n      >\n        <Icon name=\"dropdown\" />\n        Canadian Dishes\n      </Accordion.Title>\n      <Accordion.Content active={activeIndex === 3}>\n        \n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nexport default MenuListComponenet;\n","import React from 'react'\nimport { Button, Header, Icon, Modal, Menu } from 'semantic-ui-react'\nimport MenuListComponenet from '../menu/MenuListComponent';\n\nconst MenuStyle = {\n  height: \"inherit\"\n}\n\nconst MenuComponent = () => (\n  <Modal trigger={<Menu.Item position=\"left\">Menu</Menu.Item>} closeIcon style={MenuStyle}>\n    <Modal.Content>\n      <Header content='Menu' />\n      <MenuListComponenet/>\n    </Modal.Content>\n    <Modal.Actions>\n      {/* <Button color='red'>\n        <Icon name='remove' /> No\n      </Button>\n      <Button color='green'>\n        <Icon name='checkmark' /> Yes\n      </Button> */}\n    </Modal.Actions>\n  </Modal>\n)\n\nexport default MenuComponent\n","import _ from \"lodash\";\nimport faker from \"faker\";\nimport React, { Component } from \"react\";\nimport { Search, Grid, Header, Segment } from \"semantic-ui-react\";\n\nconst source = _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  // image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, \"$\")\n}));\n\nconst initialState = { isLoading: false, results: [], value: \"\" };\n\nexport default class SearchExampleStandard extends Component {\n  state = initialState;\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.title });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState);\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n      const isMatch = result => re.test(result.title);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  };\n\n  render() {\n    const { isLoading, value, results } = this.state;\n\n    return (\n      <Grid>\n        <Grid.Column width={4} style={{position: 'relative', right: \"7%\"}}>\n          <Search\n            loading={isLoading}\n            // onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true\n            })}\n            results={results}\n            value={value}\n            {...this.props}\n          >\n          </Search>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n","import React, { useState, useEffect, Fragment } from \"react\";\n\nimport MenuComponent from \"./MenuComponent\";\nimport MenuSearchComponent from \"./MenuSearchComponent\";\n\nimport { Responsive, Segment, Menu } from \"semantic-ui-react\";\nimport Media from \"react-media\";\n\nconst NavbarComponent = () => {\n  return (\n    <div>\n      <Segment.Group>\n        <Media\n          queries={{\n            small: \"(max-width: 320px)\"\n            // medium: \"(min-width: 600px) and (max-width: 1199px)\",\n            // large: \"(min-width: 1200px)\"\n          }}\n        >\n          {matches => (\n            <Fragment>\n              {matches.small && (\n                <Responsive\n                  as={Menu}\n                  {...Responsive.onlyMobile}\n                  style={{\n                    background: \"#d9c8b5\",\n                    padding: \"3%\",\n                    fontSize: \".90rem\"\n                  }}\n                >\n                  <MenuComponent />\n                  <MenuSearchComponent />\n                </Responsive>\n              )}\n              {!matches.small && (\n                <Responsive\n                  as={Menu}\n                  {...Responsive.onlyMobile}\n                  style={{\n                    background: \"#d9c8b5\",\n                    padding: \"3%\"\n                  }}\n                >\n                  <MenuComponent />\n                  <MenuSearchComponent />\n                </Responsive>\n              )}\n            </Fragment>\n          )}\n        </Media>\n        <Responsive as={Segment} {...Responsive.onlyTablet}>\n          Tablet\n        </Responsive>\n        <Responsive as={Segment} {...Responsive.onlyComputer}>\n          Computer\n        </Responsive>\n        <Responsive as={Segment} {...Responsive.onlyLargeScreen}>\n          Large Screen\n        </Responsive>\n        <Responsive as={Segment} {...Responsive.onlyWidescreen}>\n          Widescreen\n        </Responsive>\n      </Segment.Group>\n    </div>\n  );\n};\n\nexport default NavbarComponent;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport LandingpageComponent from \"./components/LandingComponent\";\nimport VisitUsComponenet from \"./components/VisitUsComponent\";\nimport NavBarComponent from \"./components/Navbar/NavbarComponent\";\n\nimport {} from \"semantic-ui-react\";\n\nfunction App() {\n  return (\n    <div style={{background: '#d9c8b5'}}>\n      <NavBarComponent/>\n      <LandingpageComponent/>\n      <VisitUsComponenet/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}